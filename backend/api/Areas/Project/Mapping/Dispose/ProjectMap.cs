using System.Linq;
using Mapster;
using Newtonsoft.Json;
using Pims.Api.Mapping.Converters;
using Entity = Pims.Dal.Entities;
using Model = Pims.Api.Areas.Project.Models.Dispose;

namespace Pims.Api.Areas.Project.Mapping.Dispose
{
    public class ProjectMap : IRegister
    {
        public void Register(TypeAdapterConfig config)
        {
            config.NewConfig<Entity.Project, Model.ProjectModel>()
                .Map(dest => dest.Id, src => src.Id)
                .Map(dest => dest.ProjectNumber, src => src.ProjectNumber)
                .Map(dest => dest.Name, src => src.Name)
                .Map(dest => dest.ReportedFiscalYear, src => src.ReportedFiscalYear)
                .Map(dest => dest.ActualFiscalYear, src => src.ActualFiscalYear)
                .Map(dest => dest.WorkflowId, src => src.WorkflowId)
                .Map(dest => dest.WorkflowCode, src => src.Workflow.Code)
                .Map(dest => dest.StatusId, src => src.StatusId)
                .Map(dest => dest.StatusCode, src => src.Status.Code)
                .Map(dest => dest.Status, src => src.Status)
                .Map(dest => dest.RiskId, src => src.RiskId)
                .Map(dest => dest.Risk, src => src.Risk.Name)
                .Map(dest => dest.TierLevelId, src => src.TierLevelId)
                .Map(dest => dest.TierLevel, src => src.TierLevel == null ? null : src.TierLevel.Name)
                .Map(dest => dest.Description, src => src.Description)
                .Map(dest => dest.Note, src => src.Note)
                .Map(dest => dest.AgencyId, src => src.AgencyId)
                .Map(dest => dest.Purchaser, src => src.Purchaser)
                .Map(dest => dest.Manager, src => src.Manager)
                .Map(dest => dest.IsContractConditional, src => src.IsContractConditional)
                .Map(dest => dest.Agency, src => AgencyConverter.ConvertAgency(src.Agency))
                .Map(dest => dest.SubAgency, src => AgencyConverter.ConvertSubAgency(src.Agency))
                .Map(dest => dest.Properties, src => src.Properties)
                .Map(dest => dest.PublicNote, src => src.PublicNote)
                .Map(dest => dest.PrivateNote, src => src.PrivateNote)
                .Map(dest => dest.OffersNote, src => src.OffersNote)
                .Map(dest => dest.SubmittedOn, src => src.SubmittedOn)
                .Map(dest => dest.ApprovedOn, src => src.ApprovedOn)
                .Map(dest => dest.DeniedOn, src => src.DeniedOn)
                .Map(dest => dest.CancelledOn, src => src.CancelledOn)
                .Map(dest => dest.InitialNotificationSentOn, src => src.InitialNotificationSentOn)
                .Map(dest => dest.ThirtyDayNotificationSentOn, src => src.ThirtyDayNotificationSentOn)
                .Map(dest => dest.SixtyDayNotificationSentOn, src => src.SixtyDayNotificationSentOn)
                .Map(dest => dest.NinetyDayNotificationSentOn, src => src.NinetyDayNotificationSentOn)
                .Map(dest => dest.OnHoldNotificationSentOn, src => src.OnHoldNotificationSentOn)
                .Map(dest => dest.ClearanceNotificationSentOn, src => src.ClearanceNotificationSentOn)
                .Map(dest => dest.TransferredWithinGreOn, src => src.TransferredWithinGreOn)
                .Map(dest => dest.MarketedOn, src => src.MarketedOn)
                .Map(dest => dest.OfferAcceptedOn, src => src.OfferAcceptedOn)
                .Map(dest => dest.DisposedOn, src => src.DisposedOn)
                .Map(dest => dest.AssessedOn, src => src.AssessedOn)
                .Map(dest => dest.AdjustedOn, src => src.AdjustedOn)
                .Map(dest => dest.PreliminaryFormSignedOn, src => src.PreliminaryFormSignedOn)
                .Map(dest => dest.FinalFormSignedOn, src => src.FinalFormSignedOn)
                .Map(dest => dest.PriorYearAdjustmentOn, src => src.PriorYearAdjustmentOn)
                .Map(dest => dest.ExemptionRequested, src => src.ExemptionRequested)
                .Map(dest => dest.ExemptionRationale, src => src.ExemptionRationale)
                .Map(dest => dest.NetBook, src => src.NetBook)
                .Map(dest => dest.NetBookOverride, src => src.NetBookOverride)
                .Map(dest => dest.Estimated, src => src.Estimated)
                .Map(dest => dest.SalesCost, src => src.SalesCost)
                .Map(dest => dest.NetProceeds, src => src.NetProceeds)
                .Map(dest => dest.SalesProceeds, src => src.SalesProceeds)
                .Map(dest => dest.ProgramCost, src => src.ProgramCost)
                .Map(dest => dest.GainLoss, src => src.GainLoss)
                .Map(dest => dest.SppCapitalization, src => src.SppCapitalization)
                .Map(dest => dest.GainBeforeSpp, src => src.GainBeforeSpp)
                .Map(dest => dest.GainAfterSpp, src => src.GainAfterSpp)
                .Map(dest => dest.OcgFinancialStatement, src => src.OcgFinancialStatement)
                .Map(dest => dest.OfferAmount, src => src.OfferAmount)
                .Map(dest => dest.Assessed, src => src.Assessed)
                .Map(dest => dest.AssessedOverride, src => src.AssessedOverride)
                .Map(dest => dest.SaleWithLeaseInPlace, src => src.SaleWithLeaseInPlace)
                .Map(dest => dest.PriorYearAdjustment, src => src.PriorYearAdjustment)
                .Map(dest => dest.PriorYearAdjustmentAmount, src => src.PriorYearAdjustmentAmount)
                .Map(dest => dest.InterestComponent, src => src.InterestComponent)
                .Map(dest => dest.Realtor, src => src.Realtor)
                .Map(dest => dest.RealtorRate, src => src.RealtorRate)
                .Map(dest => dest.RealtorCommission, src => src.RealtorCommission)
                .Map(dest => dest.Remediation, src => src.Remediation)
                .Map(dest => dest.PlannedFutureUse, src => src.PlannedFutureUse)
                .Map(dest => dest.PreliminaryFormSignedBy, src => src.PreliminaryFormSignedBy)
                .Map(dest => dest.FinalFormSignedBy, src => src.FinalFormSignedBy)
                .Map(dest => dest.Tasks, src => src.Tasks)
                .Map(dest => dest.ProjectAgencyResponses, src => src.Responses)
                .Map(dest => dest.Notes, src => src.Notes)
                .BeforeMapping((src, dest) => JsonConvert.PopulateObject(src.Metadata ?? "{}", src)) //use the metadata object to populate fields not stored in DB.
                .Inherits<Entity.BaseEntity, Api.Models.BaseModel>();

            config.NewConfig<Model.ProjectModel, Entity.Project>()
                .Map(dest => dest.Id, src => src.Id)
                .Map(dest => dest.ProjectNumber, src => src.ProjectNumber)
                .Map(dest => dest.Name, src => src.Name)
                .Map(dest => dest.ReportedFiscalYear, src => src.ReportedFiscalYear)
                .Map(dest => dest.ActualFiscalYear, src => src.ActualFiscalYear)
                .Map(dest => dest.WorkflowId, src => src.WorkflowId)
                .Map(dest => dest.StatusId, src => src.StatusId)
                .Map(dest => dest.RiskId, src => src.RiskId)
                .Map(dest => dest.TierLevelId, src => src.TierLevelId)
                .Map(dest => dest.Description, src => src.Description)
                .Map(dest => dest.Note, src => src.Note)
                .Map(dest => dest.AgencyId, src => src.AgencyId)
                .Map(dest => dest.Purchaser, src => src.Purchaser)
                .Map(dest => dest.Manager, src => src.Manager)
                .Map(dest => dest.IsContractConditional, src => src.IsContractConditional)
                .Map(dest => dest.Properties, src => src.Properties)
                .Map(dest => dest.PublicNote, src => src.PublicNote)
                .Map(dest => dest.PrivateNote, src => src.PrivateNote)
                .Map(dest => dest.OffersNote, src => src.OffersNote)
                .Map(dest => dest.SubmittedOn, src => src.SubmittedOn)
                .Map(dest => dest.ApprovedOn, src => src.ApprovedOn)
                .Map(dest => dest.DeniedOn, src => src.DeniedOn)
                .Map(dest => dest.CancelledOn, src => src.CancelledOn)
                .Map(dest => dest.InitialNotificationSentOn, src => src.InitialNotificationSentOn)
                .Map(dest => dest.ThirtyDayNotificationSentOn, src => src.ThirtyDayNotificationSentOn)
                .Map(dest => dest.SixtyDayNotificationSentOn, src => src.SixtyDayNotificationSentOn)
                .Map(dest => dest.NinetyDayNotificationSentOn, src => src.NinetyDayNotificationSentOn)
                .Map(dest => dest.OnHoldNotificationSentOn, src => src.OnHoldNotificationSentOn)
                .Map(dest => dest.ClearanceNotificationSentOn, src => src.ClearanceNotificationSentOn)
                .Map(dest => dest.TransferredWithinGreOn, src => src.TransferredWithinGreOn)
                .Map(dest => dest.MarketedOn, src => src.MarketedOn)
                .Map(dest => dest.OfferAcceptedOn, src => src.OfferAcceptedOn)
                .Map(dest => dest.DisposedOn, src => src.DisposedOn)
                .Map(dest => dest.AssessedOn, src => src.AssessedOn)
                .Map(dest => dest.AdjustedOn, src => src.AdjustedOn)
                .Map(dest => dest.PreliminaryFormSignedOn, src => src.PreliminaryFormSignedOn)
                .Map(dest => dest.FinalFormSignedOn, src => src.FinalFormSignedOn)
                .Map(dest => dest.PriorYearAdjustmentOn, src => src.PriorYearAdjustmentOn)
                .Map(dest => dest.ExemptionRequested, src => src.ExemptionRequested)
                .Map(dest => dest.ExemptionRationale, src => src.ExemptionRationale)
                .Map(dest => dest.NetBook, src => src.NetBook)
                .Map(dest => dest.NetBookOverride, src => src.NetBookOverride)
                .Map(dest => dest.Estimated, src => src.Estimated)
                .Map(dest => dest.Assessed, src => src.Assessed)
                .Map(dest => dest.AssessedOverride, src => src.AssessedOverride)
                .Map(dest => dest.SalesCost, src => src.SalesCost)
                .Map(dest => dest.NetProceeds, src => src.NetProceeds)
                .Map(dest => dest.SalesProceeds, src => src.SalesProceeds)
                .Map(dest => dest.ProgramCost, src => src.ProgramCost)
                .Map(dest => dest.GainLoss, src => src.GainLoss)
                .Map(dest => dest.SppCapitalization, src => src.SppCapitalization)
                .Map(dest => dest.GainBeforeSpp, src => src.GainBeforeSpp)
                .Map(dest => dest.GainAfterSpp, src => src.GainAfterSpp)
                .Map(dest => dest.OcgFinancialStatement, src => src.OcgFinancialStatement)
                .Map(dest => dest.OfferAmount, src => src.OfferAmount)
                .Map(dest => dest.SaleWithLeaseInPlace, src => src.SaleWithLeaseInPlace)
                .Map(dest => dest.PriorYearAdjustment, src => src.PriorYearAdjustment)
                .Map(dest => dest.PriorYearAdjustmentAmount, src => src.PriorYearAdjustmentAmount)
                .Map(dest => dest.InterestComponent, src => src.InterestComponent)
                .Map(dest => dest.Realtor, src => src.Realtor)
                .Map(dest => dest.RealtorRate, src => src.RealtorRate)
                .Map(dest => dest.RealtorCommission, src => src.RealtorCommission)
                .Map(dest => dest.Remediation, src => src.Remediation)
                .Map(dest => dest.PlannedFutureUse, src => src.PlannedFutureUse)
                .Map(dest => dest.PreliminaryFormSignedBy, src => src.PreliminaryFormSignedBy)
                .Map(dest => dest.FinalFormSignedBy, src => src.FinalFormSignedBy)
                .Map(dest => dest.Tasks, src => src.Tasks)
                .Map(dest => dest.Responses, src => src.ProjectAgencyResponses)
                .Map(dest => dest.Notes, src => src.Notes)
                .AfterMapping((src, dest) => dest.Metadata = JsonConvert.SerializeObject(dest)) //Map all non-ignored fields into the metadata.
                .Inherits<Api.Models.BaseModel, Entity.BaseEntity>();
        }
    }
}
