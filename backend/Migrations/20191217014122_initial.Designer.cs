// <auto-generated />
using System;
using BackendApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BackendApi.Migrations
{
    [DbContext (typeof (GeoSpatialContext))]
    [Migration ("20191217014122_initial")]
    partial class initial
    {
        protected override void BuildTargetModel (ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation ("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation ("ProductVersion", "3.1.0")
                .HasAnnotation ("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity ("BackendApi.Data.Entities.Place", b =>
            {
                b.Property<int> ("Id")
                    .ValueGeneratedOnAdd ()
                    .HasColumnType ("integer")
                    .HasAnnotation ("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime> ("CreatedOn")
                    .HasColumnType ("timestamp without time zone");

                b.Property<double> ("Lat")
                    .HasColumnType ("double precision");

                b.Property<double> ("Lng")
                    .HasColumnType ("double precision");

                b.Property<string> ("Note")
                    .HasColumnType ("text");

                b.Property<Guid> ("OwnerId")
                    .HasColumnType ("uuid");

                b.Property<Guid?> ("UpdatedById")
                    .HasColumnType ("uuid");

                b.Property<DateTime?> ("UpdatedOn")
                    .HasColumnType ("timestamp without time zone");

                b.HasKey ("Id");

                b.ToTable ("Places");
            });
#pragma warning restore 612, 618
        }
    }
}
