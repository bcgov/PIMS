// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pims.Api.Data;

namespace Pims.Api.Migrations
{
    [DbContext(typeof(PIMSContext))]
    partial class PIMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pims.Api.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Postal")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Postal", "Address1");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingConstructionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingFloorCount")
                        .HasColumnType("int");

                    b.Property<float>("BuildingNetBookValue")
                        .HasColumnType("real");

                    b.Property<int>("BuildingPredominateUseId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTenancy")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ParcelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BuildingConstructionTypeId");

                    b.HasIndex("BuildingPredominateUseId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ParcelId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Latitude", "Longitude", "LocalId", "BuildingConstructionTypeId", "BuildingPredominateUseId", "BuildingFloorCount", "BuildingTenancy");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.BuildingConstructionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("BuildingConstructionTypes");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.BuildingPredominateUse", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("BuildingPredominateUses");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<float>("AssessedValue")
                        .HasColumnType("real");

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<float>("LandArea")
                        .HasColumnType("real");

                    b.Property<string>("LandLegalDescription")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ParcelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ParcelId")
                        .IsUnique();

                    b.HasIndex("StatusId");

                    b.HasIndex("UpdatedById");

                    b.HasIndex("Latitude", "Longitude", "StatusId", "ClassificationId", "LocalId", "AssessedValue", "LandArea");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyClassification", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("PropertyClassifications");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("PropertyStatus");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Province", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("ROWVERSION");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("DATETIME2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UpdatedById");

                    b.HasIndex("LastName", "FirstName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Address", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Building", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.BuildingConstructionType", "BuildingConstructionType")
                        .WithMany()
                        .HasForeignKey("BuildingConstructionTypeId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.BuildingPredominateUse", "BuildingPredominateUse")
                        .WithMany()
                        .HasForeignKey("BuildingPredominateUseId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.Parcel", "Parcel")
                        .WithMany("Buildings")
                        .HasForeignKey("ParcelId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.BuildingConstructionType", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.BuildingPredominateUse", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.City", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Parcel", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.PropertyClassification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.PropertyStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .IsRequired();

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyClassification", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyStatus", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.PropertyType", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.Province", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("Pims.Api.Data.Entities.User", b =>
                {
                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Pims.Api.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });
#pragma warning restore 612, 618
        }
    }
}
