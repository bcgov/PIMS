services:
  ####################### React App #######################
  pims-app-v2:
    tty: true
    restart: "no"
    container_name: pims-app-v2
    build:
      context: react-app
    ports:
      - ${APP_HTTP_PORT:-3000}:3000
    depends_on:
      - pims-api-v2
    env_file: .env
    networks:
      - pims

  ####################### Express API #######################
  pims-api-v2:
    restart: "no"
    container_name: pims-api-v2
    build:
      context: express-api
    env_file:
      - .env
    ports:
      - ${API_HTTP_PORT:-5000}:5000
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v2/health"]
      interval: 300s
      timeout: 10s
      retries: 3
    networks:
      - pims

  ####################### Postgres #######################
  postgres:
    container_name: postgres
    image: postgres:17.5
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data # Named volumes persist on "down" with Podman
      - ./database/postgres:/backup # A local mount to place dump files for restore/export
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1",
        ]
      interval: 5s
      timeout: 3s
    networks:
      - pims

####################### Hotloading Dev Containers #######################
  pims-app-dev:
    tty: true
    restart: "no"
    image: node:22.9-bullseye-slim
    container_name: pims-app-dev
    volumes:
      - ./react-app:/app
    working_dir: /app
    ports:
      - ${APP_HTTP_PORT:-3000}:3000
    environment:
      - CONTAINERIZED=true # So it targets container directly
      - API_PROXY=http://pims-api-dev:5000 
      - WATCHPACK_POLLING=true # Enable polling for file changes
      - CHOKIDAR_USEPOLLING=true # Enable polling for Vite/React dev servers
      - FAST_REFRESH=true # Ensure fast refresh is enabled
    env_file: .env
    command: npm run dev
    networks:
      - pims
  
  pims-api-dev:
    tty: true
    restart: "no"
    image: node:22.9-bullseye-slim
    container_name: pims-api-dev
    volumes:
      - ./express-api:/app
    working_dir: /app
    ports:
      - ${API_HTTP_PORT:-5000}:5000
    environment:
      - CONTAINERIZED=true # So it targets container directly
      - POSTGRES_PORT=5432 # Must be for internal network
      - CHOKIDAR_USEPOLLING=true
    env_file: .env
    command: npx nodemon --exec ts-node -r tsconfig-paths/register ./src/server.ts
    networks:
      - pims

####################### Networks Definition #######################
networks:
  pims:
    name: pims-net
    driver: bridge

####################### Volumes Definition #######################
volumes:
  postgres_data:
    name: postgres_data
