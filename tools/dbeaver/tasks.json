{
	"##tasksFolders": {
		"PIMS ETL": {}
	},
	"fab887c2-5418-4df1-9c97-f780bd947c3a": {
		"task": "dataExport",
		"label": "PIMS ETL - Prod to Local",
		"description": "Export of the Agencies, Roles, Claims, Users, and User Roles",
		"taskFolder": "PIMS ETL",
		"createTime": "202403151431",
		"updateTime": "202403151431",
		"state": {
			"producers": [
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "SELECT TOP (1000) [Id]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [CreatedById]\r\n      ,GETDATE() as [CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Name]\r\n      ,[IsDisabled]\r\n      ,[SortOrder]\r\n      ,[Code]\r\n      ,[Description]\r\n      ,[ParentId]\r\n      ,[Email]\r\n      ,[SendEmail]\r\n      ,[AddressTo]\r\n      ,[CCEmail]\r\n  FROM [pims].[dbo].[Agencies]\r\n  \r\n  ORDER BY ParentId"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "\r\nSELECT \r\n    u.[Id],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tWHEN u.[CreatedById] \u003d \u0027FB95044D-9942-480E-BD1E-1F9EE9BF1EB3\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE u.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.IsDisabled \u003d 0 THEN \u0027Active\u0027\r\n\t\tELSE \u0027Disabled\u0027\r\n\t  END AS [Status],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn,\r\n    urd.UserId,\r\n    ua.AgencyId, \r\n    STRING_AGG(urd.RoleName, \u0027, \u0027) AS Roles,\r\n    CASE \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%System Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial Reporter%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial%\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Agency Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Analyst%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Manager%\u0027 THEN \u002700000000-0000-0000-0000-000000000001\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister Assistant%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Executive Director%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%View Only Properties%\u0027 THEN \u002700000000-0000-0000-0000-000000000002\u0027\r\n\t   \r\n    END AS UserType\r\nFROM Users u\r\nLEFT JOIN (\r\n    SELECT \r\n        ur.UserId,\r\n        MAX(ur.CreatedOn) AS CreatedOn,\r\n        STRING_AGG(r.Name, \u0027, \u0027) AS RoleName\r\n    FROM [pims].[dbo].[UserRoles] ur\r\n    INNER JOIN Roles r ON ur.RoleId \u003d r.Id\r\n    GROUP BY ur.UserId\r\n) AS urd ON u.Id \u003d urd.UserId\r\n\r\nLEFT OUTER JOIN (\r\n    SELECT UserId, MIN(AgencyId) AS AgencyId\r\n    FROM UserAgencies\r\n    GROUP BY UserId\r\n) ua_min ON u.Id \u003d ua_min.UserId\r\nLEFT OUTER JOIN UserAgencies ua ON u.Id \u003d ua.UserId AND ua.AgencyId \u003d ua_min.AgencyId\r\n\r\nWHERE u.Id \u003c\u003e \u002700000000-0000-0000-0000-000000000000\u0027\r\n\r\nGROUP BY u.[Id],\r\n    u.[CreatedById],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn, \r\n    urd.UserId, \r\n    ua.AgencyId\r\nORDER BY u.CreatedOn, u.UpdatedOn"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT p.[Id],\r\n\t  CASE \r\n\t\tWHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE p.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    p.[CreatedOn],\r\n    p.[UpdatedById],\r\n    p.[UpdatedOn],\r\n    p.[Name],\r\n    p.[Description],\r\n    p.[ClassificationId],\r\n    p.[AgencyId],\r\n    p.[IsSensitive],\r\n    p.[IsVisibleToOtherAgencies],\r\n    p.[PID],\r\n    p.[PIN],\r\n    p.[LandArea],\r\n    p.[LandLegalDescription],\r\n    p.[Zoning],\r\n    p.[ZoningPotential],\r\n    p.[NotOwned],\r\n\tCONVERT(VARCHAR(40), CAST(Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(Location.Lat AS DECIMAL(18, 14))) AS Location,\r\n    CASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS AdministrativeAreaId,  \r\n\ta.AdministrativeArea,\r\n\ta.Address1, \r\n\ta.Postal,\r\n\tpp.ParcelId as ParentID,\r\n\t0 as PropertyTypeID\r\nFROM \r\n    [pims].[dbo].[Parcels] p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n    LEFT OUTER JOIN ParcelParcels pp\r\n    ON pp.SubdivisionId \u003d p.Id"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT p.[Id],\r\n\tCASE \r\n\t  WHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t  ELSE p.[CreatedById]\r\n\tEND AS created_by_id,\r\n    p.[CreatedOn] AS created_on,\r\n    p.[UpdatedById] AS updated_by_id,\r\n    p.[UpdatedOn] AS updated_on,\r\n    p.[Name] AS [name],\r\n    p.[Description] AS [description],\r\n    p.[ClassificationId] AS classification_id,\r\n    p.BuildingConstructionTypeId AS building_construction_type_id,\r\n    p.[AgencyId] AS agency_id,\r\n    p.[IsSensitive] AS is_sensitive,\r\n    p.[IsVisibleToOtherAgencies] AS is_visible_to_other_agencies,\r\n\tp.BuildingFloorCount AS building_floor_count,\r\n\tp.BuildingPredominateUseId AS building_predominate_use_id,\r\n\tp.BuildingTenancy AS building_tenancy,\r\n\tp.RentableArea AS rentable_area,\r\n\tp.BuildingOccupantTypeId AS building_occupant_type_id,\r\n\tp.LeaseExpiry AS lease_expiry,\r\n\tp.OccupantName AS occupant_name,\r\n\tp.TransferLeaseOnSale AS transfer_lease_on_sale,\r\n\tp.BuildingTenancyUpdatedOn AS building_tenancy_updated_on,\r\n\tp.EncumbranceReason AS encumbrance_reason,\r\n\tp.LeasedLandMetadata AS leased_land_metadata,\r\n\tp.TotalArea AS total_area,\r\n\tCONVERT(VARCHAR(40), CAST(p.Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(p.Location.Lat AS DECIMAL(18, 14))) AS [location],\r\n\tCASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS administrative_area_id,  \r\n\ta.Address1 AS address1, \r\n\ta.Postal AS postal,\r\n\t1 as property_type_id,\r\n\tp.ProjectNumbers AS project_numbers, \r\n    COALESCE(b.PID, s.PID) AS pid,\r\n    COALESCE(b.PIN, s.PIN) AS pin\r\nFROM \r\n    [pims].[dbo].Buildings p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n\tLEFT OUTER JOIN ParcelBuildings pb\r\n\tON p.Id \u003d pb.BuildingId\r\n\tLEFT OUTER JOIN Parcels b\r\n\tON pb.ParcelId \u003d b.Id\r\n\tLEFT OUTER JOIN spreadsheet_data s\r\n\tON s.BuildingId \u003d p.Id\r\nWHERE p.BuildingPredominateUseId \u003c\u003d 54 "
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/Projects"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectStatusHistory"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectProperties"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectSnapshots"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/NotificationQueue"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [ParcelId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Firm]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[ParcelEvaluations]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [ParcelId]\r\n      ,[FiscalYear]\r\n      ,[Key]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n      ,[EffectiveDate]\r\n  FROM [dbo].[ParcelFiscals]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\n  SELECT BuildingId,\r\n  FiscalYear,\r\n  [Key],\r\n  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById],\r\n  CreatedOn,\r\n  UpdatedById,\r\n  UpdatedOn,\r\n  [Value],\r\n  Note,\r\n  EffectiveDate\r\n  FROM BuildingFiscals \r\n  \r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [BuildingId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[BuildingEvaluations]\r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT [ProjectId]\r\n      ,[TaskId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsCompleted]\r\n      ,[CompletedOn]\r\n  FROM [dbo].[ProjectTasks]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsFinal]\r\n      ,[Name]\r\n      ,[From]\r\n      ,[To]\r\n      ,[ReportType]\r\n  FROM [dbo].[ProjectReports]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT [ProjectId]\r\n      ,[AgencyId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[OfferAmount]\r\n      ,[NotificationId]\r\n      ,[Response]\r\n      ,[ReceivedOn]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectAgencyResponses]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[ProjectId]\r\n      ,[NoteType]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectNotes]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "\r\n/* query to extract from project.metadata table and into project_note table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027appraisedBy\u0027 THEN 17\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedBy\u0027 THEN 23\r\n\t\tWHEN kv.[key] \u003d \u0027plannedFutureUse\u0027 THEN 24\r\n\t\tWHEN kv.[key] \u003d \u0027preliminaryFormSignedBy\u0027 THEN 25\r\n\t\tWHEN kv.[key] \u003d \u0027purchaser\u0027 THEN 26\r\n\t\tWHEN kv.[key] \u003d \u0027realtor\u0027 THEN 27\r\n\t\tWHEN kv.[key] \u003d \u0027realtorRate\u0027 THEN 28\r\n\tEND AS note_type_id,\r\n    kv.[value] AS \"note\",\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027purchaser\u0027, \u0027appraisedBy\u0027, \u0027finalFormSignedBy\u0027, \u0027plannedFutureUse\u0027, \u0027preliminaryFormSignedBy\u0027, \u0027realtor\u0027 , \u0027realtorRate\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "/* query to extract from project.metadata table and into project_timestamp table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027adjustedOn\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027approvedForSplOn\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027clearanceNotificationSentOn\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027disposedOn\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027exemptionApprovedOn\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedOn\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027interestedReceivedOn\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027offerAcceptedOn\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplApprovedOn\u0027 THEN 9\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplRequestOn\u0027 THEN 10\r\n\t\tWHEN kv.[key] \u003d \u0027requestForSplReceivedOn\u0027 THEN 11\r\n\t\tWHEN kv.[key] \u003d \u0027transferredWithinGreOn\u0027 THEN 12\r\n\tEND AS timestamp_type_id,\r\n    CONVERT(datetime, REPLACE(kv.[value], \u0027T\u0027, \u0027 \u0027), 120) AS [date],\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027adjustedOn\u0027, \u0027approvedForSplOn\u0027, \u0027clearanceNotificationSentOn\u0027, \u0027disposedOn\u0027, \u0027exemptionApprovedOn\u0027, \u0027finalFormSignedOn\u0027, \u0027interestedReceivedOn\u0027, \u0027offerAcceptedOn\u0027, \u0027removalFromSplApprovedOn\u0027, \u0027removalFromSplRequestOn\u0027, \u0027requestForSplReceivedOn\u0027, \u0027transferredWithinGreOn\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "/* query to extract from project.metadata table and into project_monetary table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027gainBeforeSpl\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027interestComponent\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027netProceeds\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027gainLoss\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027ocgFinancialStatement\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027offerAmount\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027programCost\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027realtorCommission\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027salesCost\u0027 THEN 9\r\n\tEND AS monetary_type_id,\r\n    kv.[value] AS \"value\" ,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027gainBeforeSpl\u0027, \u0027interestComponent\u0027, \u0027netProceeds\u0027, \u0027gainLoss\u0027, \u0027ocgFinancialStatement\u0027, \u0027offerAmount\u0027, \u0027programCost\u0027, \u0027realtorCommission\u0027, \u0027salesCost\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "/* Query to extract relevant data from project.metadata table and into project_task table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n    CASE \r\n        WHEN kv.[value] \u003d \u0027true\u0027 THEN 1\r\n        WHEN kv.[value] \u003d \u0027false\u0027 THEN 0\r\n        ELSE NULL\r\n    END AS is_completed,\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN 16\r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN 17\r\n\tEND AS \"task_id\",\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN JSON_VALUE(p.metadata, \u0027$.priorYearAdjustmentOn\u0027)\r\n                ELSE NULL\r\n            END\r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN p.CreatedOn\r\n                ELSE NULL\r\n            END\r\n        ELSE NULL\r\n    END AS completed_on,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027priorYearAdjustment\u0027, \u0027exemptionRequested\u0027)\r\n\torder by kv.[key]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "postgres-jdbc-18ceb57db81-643fa3bb56d54f2f",
						"defaultCatalog": "postgres",
						"defaultSchema": "public",
						"query": "SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));"
					}
				}
			],
			"consumers": [
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				}
			],
			"configuration": {
				"maxJobCount": 1,
				"showFinalMessage": true,
				"DatabaseTransferProducer": {
					"extractType": "SEGMENTS",
					"segmentSize": 1000,
					"fetchSize": 10000,
					"openNewConnections": true,
					"queryRowCount": false,
					"selectedColumnsOnly": false,
					"selectedRowsOnly": false
				},
				"DatabaseTransferConsumer": {
					"entityId": "postgres-jdbc-18ceb57db81-643fa3bb56d54f2f/postgres/public",
					"openNewConnections": true,
					"useTransactions": true,
					"commitAfterRows": 1000,
					"useMultiRowInsert": false,
					"multiRowInsertBatch": 500,
					"skipBindValues": false,
					"disableUsingBatches": true,
					"ignoreDuplicateRows": true,
					"onDuplicateKeyMethod": "pgReplaceIgnore",
					"transferAutoGeneratedColumns": true,
					"disableReferentialIntegrity": true,
					"useBulkLoad": false,
					"truncateBeforeLoad": false,
					"openTableOnFinish": true,
					"mappings": {
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT TOP (1000) [Id]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [CreatedById]\r\n      ,GETDATE() as [CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Name]\r\n      ,[IsDisabled]\r\n      ,[SortOrder]\r\n      ,[Code]\r\n      ,[Description]\r\n      ,[ParentId]\r\n      ,[Email]\r\n      ,[SendEmail]\r\n      ,[AddressTo]\r\n      ,[CCEmail]\r\n  FROM [pims].[dbo].[Agencies]\r\n  \r\n  ORDER BY ParentId": {
							"targetName": "agency",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "\"Id\"",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "Name",
									"mappingType": "existing"
								},
								"isdisabled": {
									"targetName": "is_disabled",
									"mappingType": "existing"
								},
								"sortorder": {
									"targetName": "sort_order",
									"mappingType": "existing"
								},
								"code": {
									"targetName": "\"Code\"",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "\"Description\"",
									"mappingType": "existing"
								},
								"parentid": {
									"targetName": "parent_id",
									"mappingType": "existing"
								},
								"email": {
									"targetName": "\"Email\"",
									"mappingType": "existing"
								},
								"sendemail": {
									"targetName": "send_email",
									"mappingType": "existing"
								},
								"addressto": {
									"targetName": "address_to",
									"mappingType": "existing"
								},
								"ccemail": {
									"targetName": "cc_email",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT \r\n    u.[Id],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tWHEN u.[CreatedById] \u003d \u0027FB95044D-9942-480E-BD1E-1F9EE9BF1EB3\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE u.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.IsDisabled \u003d 0 THEN \u0027Active\u0027\r\n\t\tELSE \u0027Disabled\u0027\r\n\t  END AS [Status],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn,\r\n    urd.UserId,\r\n    ua.AgencyId, \r\n    STRING_AGG(urd.RoleName, \u0027, \u0027) AS Roles,\r\n    CASE \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%System Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial Reporter%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial%\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Agency Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Analyst%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Manager%\u0027 THEN \u002700000000-0000-0000-0000-000000000001\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister Assistant%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Executive Director%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%View Only Properties%\u0027 THEN \u002700000000-0000-0000-0000-000000000002\u0027\r\n\t   \r\n    END AS UserType\r\nFROM Users u\r\nLEFT JOIN (\r\n    SELECT \r\n        ur.UserId,\r\n        MAX(ur.CreatedOn) AS CreatedOn,\r\n        STRING_AGG(r.Name, \u0027, \u0027) AS RoleName\r\n    FROM [pims].[dbo].[UserRoles] ur\r\n    INNER JOIN Roles r ON ur.RoleId \u003d r.Id\r\n    GROUP BY ur.UserId\r\n) AS urd ON u.Id \u003d urd.UserId\r\n\r\nLEFT OUTER JOIN (\r\n    SELECT UserId, MIN(AgencyId) AS AgencyId\r\n    FROM UserAgencies\r\n    GROUP BY UserId\r\n) ua_min ON u.Id \u003d ua_min.UserId\r\nLEFT OUTER JOIN UserAgencies ua ON u.Id \u003d ua.UserId AND ua.AgencyId \u003d ua_min.AgencyId\r\n\r\nWHERE u.Id \u003c\u003e \u002700000000-0000-0000-0000-000000000000\u0027\r\n\r\nGROUP BY u.[Id],\r\n    u.[CreatedById],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn, \r\n    urd.UserId, \r\n    ua.AgencyId\r\nORDER BY u.CreatedOn, u.UpdatedOn": {
							"targetName": "user",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"status": {
									"targetName": "status",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"username": {
									"targetName": "username",
									"mappingType": "existing"
								},
								"displayname": {
									"targetName": "display_name",
									"mappingType": "existing"
								},
								"firstname": {
									"targetName": "first_name",
									"mappingType": "existing"
								},
								"middlename": {
									"targetName": "middle_name",
									"mappingType": "existing"
								},
								"lastname": {
									"targetName": "last_name",
									"mappingType": "existing"
								},
								"email": {
									"targetName": "email",
									"mappingType": "existing"
								},
								"Position": {
									"targetName": "\"Position\"",
									"mappingType": "existing"
								},
								"isdisabled": {
									"targetName": "is_disabled",
									"mappingType": "existing"
								},
								"emailverified": {
									"targetName": "email_verified",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"issystem": {
									"targetName": "is_system",
									"mappingType": "existing"
								},
								"lastlogin": {
									"targetName": "last_login",
									"mappingType": "existing"
								},
								"approvedbyid": {
									"targetName": "approved_by_id",
									"mappingType": "existing"
								},
								"approvedon": {
									"targetName": "approved_on",
									"mappingType": "existing"
								},
								"keycloakuserid": {
									"targetName": "keycloak_user_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"userid": {
									"targetName": "userid",
									"mappingType": "skip"
								},
								"agencyid": {
									"targetName": "agency_id",
									"mappingType": "existing"
								},
								"roles": {
									"targetName": "roles",
									"mappingType": "skip"
								},
								"usertype": {
									"targetName": "role_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT p.[Id],\r\n\t  CASE \r\n\t\tWHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE p.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    p.[CreatedOn],\r\n    p.[UpdatedById],\r\n    p.[UpdatedOn],\r\n    p.[Name],\r\n    p.[Description],\r\n    p.[ClassificationId],\r\n    p.[AgencyId],\r\n    p.[IsSensitive],\r\n    p.[IsVisibleToOtherAgencies],\r\n    p.[PID],\r\n    p.[PIN],\r\n    p.[LandArea],\r\n    p.[LandLegalDescription],\r\n    p.[Zoning],\r\n    p.[ZoningPotential],\r\n    p.[NotOwned],\r\n\tCONVERT(VARCHAR(40), CAST(Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(Location.Lat AS DECIMAL(18, 14))) AS Location,\r\n    CASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS AdministrativeAreaId,  \r\n\ta.AdministrativeArea,\r\n\ta.Address1, \r\n\ta.Postal,\r\n\tpp.ParcelId as ParentID,\r\n\t0 as PropertyTypeID\r\nFROM \r\n    [pims].[dbo].[Parcels] p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n    LEFT OUTER JOIN ParcelParcels pp\r\n    ON pp.SubdivisionId \u003d p.Id": {
							"targetName": "parcel",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "Name",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"classificationid": {
									"targetName": "classification_id",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"mappingType": "existing"
								},
								"issensitive": {
									"targetName": "is_sensitive",
									"mappingType": "existing"
								},
								"isvisibletootheragencies": {
									"targetName": "is_visible_to_other_agencies",
									"mappingType": "existing"
								},
								"pid": {
									"targetName": "pid",
									"mappingType": "existing"
								},
								"pin": {
									"targetName": "pin",
									"mappingType": "existing"
								},
								"landarea": {
									"targetName": "land_area",
									"mappingType": "existing"
								},
								"landlegaldescription": {
									"targetName": "land_legal_description",
									"mappingType": "existing"
								},
								"zoning": {
									"targetName": "zoning",
									"mappingType": "existing"
								},
								"zoningpotential": {
									"targetName": "zoning_potential",
									"mappingType": "existing"
								},
								"notowned": {
									"targetName": "not_owned",
									"mappingType": "skip"
								},
								"Location": {
									"targetName": "\"location\"",
									"mappingType": "existing"
								},
								"administrativeareaid": {
									"targetName": "administrative_area_id",
									"mappingType": "existing"
								},
								"administrativearea": {
									"targetName": "administrativearea",
									"mappingType": "skip"
								},
								"address1": {
									"targetName": "address1",
									"mappingType": "existing"
								},
								"postal": {
									"targetName": "postal",
									"mappingType": "existing"
								},
								"parentid": {
									"targetName": "parent_parcel_id",
									"mappingType": "existing"
								},
								"propertytypeid": {
									"targetName": "property_type_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT p.[Id],\r\n\tCASE \r\n\t  WHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t  ELSE p.[CreatedById]\r\n\tEND AS created_by_id,\r\n    p.[CreatedOn] AS created_on,\r\n    p.[UpdatedById] AS updated_by_id,\r\n    p.[UpdatedOn] AS updated_on,\r\n    p.[Name] AS [name],\r\n    p.[Description] AS [description],\r\n    p.[ClassificationId] AS classification_id,\r\n    p.BuildingConstructionTypeId AS building_construction_type_id,\r\n    p.[AgencyId] AS agency_id,\r\n    p.[IsSensitive] AS is_sensitive,\r\n    p.[IsVisibleToOtherAgencies] AS is_visible_to_other_agencies,\r\n\tp.BuildingFloorCount AS building_floor_count,\r\n\tp.BuildingPredominateUseId AS building_predominate_use_id,\r\n\tp.BuildingTenancy AS building_tenancy,\r\n\tp.RentableArea AS rentable_area,\r\n\tp.BuildingOccupantTypeId AS building_occupant_type_id,\r\n\tp.LeaseExpiry AS lease_expiry,\r\n\tp.OccupantName AS occupant_name,\r\n\tp.TransferLeaseOnSale AS transfer_lease_on_sale,\r\n\tp.BuildingTenancyUpdatedOn AS building_tenancy_updated_on,\r\n\tp.EncumbranceReason AS encumbrance_reason,\r\n\tp.LeasedLandMetadata AS leased_land_metadata,\r\n\tp.TotalArea AS total_area,\r\n\tCONVERT(VARCHAR(40), CAST(p.Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(p.Location.Lat AS DECIMAL(18, 14))) AS [location],\r\n\tCASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS administrative_area_id,  \r\n\ta.Address1 AS address1, \r\n\ta.Postal AS postal,\r\n\t1 as property_type_id,\r\n\tp.ProjectNumbers AS project_numbers, \r\n    COALESCE(b.PID, s.PID) AS pid,\r\n    COALESCE(b.PIN, s.PIN) AS pin\r\nFROM \r\n    [pims].[dbo].Buildings p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n\tLEFT OUTER JOIN ParcelBuildings pb\r\n\tON p.Id \u003d pb.BuildingId\r\n\tLEFT OUTER JOIN Parcels b\r\n\tON pb.ParcelId \u003d b.Id\r\n\tLEFT OUTER JOIN spreadsheet_data s\r\n\tON s.BuildingId \u003d p.Id\r\nWHERE p.BuildingPredominateUseId \u003c\u003d 54 ": {
							"targetName": "building",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"name": {
									"targetName": "name",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"classification_id": {
									"targetName": "classification_id",
									"mappingType": "existing"
								},
								"building_construction_type_id": {
									"targetName": "building_construction_type_id",
									"mappingType": "existing"
								},
								"agency_id": {
									"targetName": "agency_id",
									"mappingType": "existing"
								},
								"is_sensitive": {
									"targetName": "is_sensitive",
									"mappingType": "existing"
								},
								"is_visible_to_other_agencies": {
									"targetName": "is_visible_to_other_agencies",
									"mappingType": "existing"
								},
								"building_floor_count": {
									"targetName": "building_floor_count",
									"mappingType": "existing"
								},
								"building_predominate_use_id": {
									"targetName": "building_predominate_use_id",
									"mappingType": "existing"
								},
								"building_tenancy": {
									"targetName": "building_tenancy",
									"mappingType": "existing"
								},
								"rentable_area": {
									"targetName": "rentable_area",
									"mappingType": "existing"
								},
								"building_occupant_type_id": {
									"targetName": "building_occupant_type_id",
									"mappingType": "existing"
								},
								"lease_expiry": {
									"targetName": "lease_expiry",
									"mappingType": "existing"
								},
								"occupant_name": {
									"targetName": "occupant_name",
									"mappingType": "existing"
								},
								"transfer_lease_on_sale": {
									"targetName": "transfer_lease_on_sale",
									"mappingType": "skip"
								},
								"building_tenancy_updated_on": {
									"targetName": "building_tenancy_updated_on",
									"mappingType": "existing"
								},
								"encumbrance_reason": {
									"targetName": "encumbrance_reason",
									"mappingType": "existing"
								},
								"leased_land_metadata": {
									"targetName": "leased_land_metadata",
									"mappingType": "skip"
								},
								"total_area": {
									"targetName": "total_area",
									"mappingType": "existing"
								},
								"location": {
									"targetName": "location",
									"mappingType": "existing"
								},
								"administrative_area_id": {
									"targetName": "administrative_area_id",
									"mappingType": "existing"
								},
								"address1": {
									"targetName": "address1",
									"mappingType": "existing"
								},
								"postal": {
									"targetName": "postal",
									"mappingType": "existing"
								},
								"property_type_id": {
									"targetName": "property_type_id",
									"mappingType": "existing"
								},
								"project_numbers": {
									"targetName": "project_numbers",
									"mappingType": "existing"
								},
								"pid": {
									"targetName": "pid",
									"mappingType": "existing"
								},
								"pin": {
									"targetName": "pin",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/Projects": {
							"targetName": "project",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectnumber": {
									"targetName": "project_number",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "Name",
									"mappingType": "existing"
								},
								"workflowid": {
									"targetName": "workflow_id",
									"mappingType": "existing"
								},
								"manager": {
									"targetName": "manager",
									"mappingType": "existing"
								},
								"reportedfiscalyear": {
									"targetName": "reported_fiscal_year",
									"mappingType": "existing"
								},
								"actualfiscalyear": {
									"targetName": "actual_fiscal_year",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"mappingType": "existing"
								},
								"statusid": {
									"targetName": "status_id",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"tierlevelid": {
									"targetName": "tier_level_id",
									"mappingType": "existing"
								},
								"riskid": {
									"targetName": "risk_id",
									"mappingType": "existing"
								},
								"metadata": {
									"targetName": "metadata",
									"mappingType": "skip"
								},
								"submittedon": {
									"targetName": "submitted_on",
									"mappingType": "existing"
								},
								"approvedon": {
									"targetName": "approved_on",
									"mappingType": "existing"
								},
								"deniedon": {
									"targetName": "denied_on",
									"mappingType": "existing"
								},
								"cancelledon": {
									"targetName": "cancelled_on",
									"mappingType": "existing"
								},
								"completedon": {
									"targetName": "completed_on",
									"mappingType": "existing"
								},
								"netbook": {
									"targetName": "net_book",
									"mappingType": "existing"
								},
								"market": {
									"targetName": "market",
									"mappingType": "existing"
								},
								"assessed": {
									"targetName": "assessed",
									"mappingType": "existing"
								},
								"appraised": {
									"targetName": "appraised",
									"mappingType": "existing"
								},
								"projecttype": {
									"targetName": "project_type",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectStatusHistory": {
							"targetName": "project_status_history",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"workflowid": {
									"targetName": "workflow_id",
									"mappingType": "existing"
								},
								"statusid": {
									"targetName": "status_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectNumbers": {
							"targetName": "project_number",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectProperties": {
							"targetName": "project_property",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"propertytype": {
									"targetName": "property_type_id",
									"mappingType": "existing"
								},
								"parcelid": {
									"targetName": "parcel_id",
									"mappingType": "existing"
								},
								"buildingid": {
									"targetName": "building_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectSnapshots": {
							"targetName": "project_snapshot",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"netbook": {
									"targetName": "net_book",
									"mappingType": "existing"
								},
								"market": {
									"targetName": "market",
									"mappingType": "existing"
								},
								"assessed": {
									"targetName": "assessed",
									"mappingType": "existing"
								},
								"appraised": {
									"targetName": "appraised",
									"mappingType": "existing"
								},
								"snapshoton": {
									"targetName": "snapshot_on",
									"mappingType": "existing"
								},
								"metadata": {
									"targetName": "metadata",
									"mappingType": "skip"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/NotificationQueue": {
							"targetName": "notification_queue",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "Id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"Key": {
									"targetName": "\"Key\"",
									"mappingType": "existing"
								},
								"status": {
									"targetName": "Status",
									"mappingType": "existing"
								},
								"priority": {
									"targetName": "Priority",
									"mappingType": "existing"
								},
								"Encoding": {
									"targetName": "\"Encoding\"",
									"mappingType": "existing"
								},
								"sendon": {
									"targetName": "send_on",
									"mappingType": "existing"
								},
								"To": {
									"targetName": "\"To\"",
									"mappingType": "existing"
								},
								"subject": {
									"targetName": "Subject",
									"mappingType": "existing"
								},
								"bodytype": {
									"targetName": "body_type",
									"mappingType": "existing"
								},
								"body": {
									"targetName": "Body",
									"mappingType": "existing"
								},
								"bcc": {
									"targetName": "Bcc",
									"mappingType": "existing"
								},
								"cc": {
									"targetName": "Cc",
									"mappingType": "existing"
								},
								"tag": {
									"targetName": "Tag",
									"mappingType": "existing"
								},
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"toagencyid": {
									"targetName": "to_agency_id",
									"mappingType": "existing"
								},
								"templateid": {
									"targetName": "template_id",
									"mappingType": "existing"
								},
								"chesmessageid": {
									"targetName": "ches_message_id",
									"mappingType": "existing"
								},
								"chestransactionid": {
									"targetName": "ches_transaction_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [ParcelId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Firm]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[ParcelEvaluations]": {
							"targetName": "parcel_evaluation",
							"mappingType": "existing",
							"attributes": {
								"parcelid": {
									"targetName": "parcel_id",
									"mappingType": "existing"
								},
								"Date": {
									"targetName": "\"year\"",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "evaluation_key_id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"firm": {
									"targetName": "firm",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [ParcelId]\r\n      ,[FiscalYear]\r\n      ,[Key]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n      ,[EffectiveDate]\r\n  FROM [dbo].[ParcelFiscals]": {
							"targetName": "parcel_fiscal",
							"mappingType": "existing",
							"attributes": {
								"parcelid": {
									"targetName": "parcel_id",
									"mappingType": "existing"
								},
								"fiscalyear": {
									"targetName": "fiscal_year",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "fiscal_key_id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"effectivedate": {
									"targetName": "effective_date",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\n  SELECT BuildingId,\r\n  FiscalYear,\r\n  [Key],\r\n  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById],\r\n  CreatedOn,\r\n  UpdatedById,\r\n  UpdatedOn,\r\n  [Value],\r\n  Note,\r\n  EffectiveDate\r\n  FROM BuildingFiscals \r\n  \r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)": {
							"targetName": "building_fiscal",
							"mappingType": "existing",
							"attributes": {
								"buildingid": {
									"targetName": "building_id",
									"mappingType": "existing"
								},
								"fiscalyear": {
									"targetName": "fiscal_year",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "fiscal_key_id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"effectivedate": {
									"targetName": "effective_date",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [BuildingId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[BuildingEvaluations]\r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)": {
							"targetName": "building_evaluation",
							"mappingType": "existing",
							"attributes": {
								"buildingid": {
									"targetName": "building_id",
									"mappingType": "existing"
								},
								"Date": {
									"targetName": "\"year\"",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "evaluation_key_id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT [ProjectId]\r\n      ,[TaskId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsCompleted]\r\n      ,[CompletedOn]\r\n  FROM [dbo].[ProjectTasks]": {
							"targetName": "project_task",
							"mappingType": "existing",
							"attributes": {
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"taskid": {
									"targetName": "task_id",
									"mappingType": "existing"
								},
								"CreatedById\r\n      ,[CreatedOn": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"iscompleted": {
									"targetName": "is_completed",
									"mappingType": "existing"
								},
								"completedon": {
									"targetName": "completed_on",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsFinal]\r\n      ,[Name]\r\n      ,[From]\r\n      ,[To]\r\n      ,[ReportType]\r\n  FROM [dbo].[ProjectReports]": {
							"targetName": "project_report",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"isfinal": {
									"targetName": "is_final",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "Name",
									"mappingType": "existing"
								},
								"From": {
									"targetName": "\"From\"",
									"mappingType": "existing"
								},
								"To": {
									"targetName": "\"To\"",
									"mappingType": "existing"
								},
								"reporttype": {
									"targetName": "report_type_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT [ProjectId]\r\n      ,[AgencyId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[OfferAmount]\r\n      ,[NotificationId]\r\n      ,[Response]\r\n      ,[ReceivedOn]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectAgencyResponses]": {
							"targetName": "project_agency_response",
							"mappingType": "existing",
							"attributes": {
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"offeramount": {
									"targetName": "offer_amount",
									"mappingType": "existing"
								},
								"notificationid": {
									"targetName": "notification_id",
									"mappingType": "existing"
								},
								"response": {
									"targetName": "response",
									"mappingType": "existing"
								},
								"receivedon": {
									"targetName": "received_on",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[ProjectId]\r\n      ,[NoteType]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectNotes]": {
							"targetName": "project_note",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"projectid": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"notetype": {
									"targetName": "note_type_id",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\n/* query to extract from project.metadata table and into project_note table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027appraisedBy\u0027 THEN 17\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedBy\u0027 THEN 23\r\n\t\tWHEN kv.[key] \u003d \u0027plannedFutureUse\u0027 THEN 24\r\n\t\tWHEN kv.[key] \u003d \u0027preliminaryFormSignedBy\u0027 THEN 25\r\n\t\tWHEN kv.[key] \u003d \u0027purchaser\u0027 THEN 26\r\n\t\tWHEN kv.[key] \u003d \u0027realtor\u0027 THEN 27\r\n\t\tWHEN kv.[key] \u003d \u0027realtorRate\u0027 THEN 28\r\n\tEND AS note_type_id,\r\n    kv.[value] AS \"note\",\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027purchaser\u0027, \u0027appraisedBy\u0027, \u0027finalFormSignedBy\u0027, \u0027plannedFutureUse\u0027, \u0027preliminaryFormSignedBy\u0027, \u0027realtor\u0027 , \u0027realtorRate\u0027 );\r\n": {
							"targetName": "project_note",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"note_type_id": {
									"targetName": "note_type_id",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* query to extract from project.metadata table and into project_timestamp table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027adjustedOn\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027approvedForSplOn\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027clearanceNotificationSentOn\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027disposedOn\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027exemptionApprovedOn\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedOn\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027interestedReceivedOn\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027offerAcceptedOn\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplApprovedOn\u0027 THEN 9\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplRequestOn\u0027 THEN 10\r\n\t\tWHEN kv.[key] \u003d \u0027requestForSplReceivedOn\u0027 THEN 11\r\n\t\tWHEN kv.[key] \u003d \u0027transferredWithinGreOn\u0027 THEN 12\r\n\tEND AS timestamp_type_id,\r\n    CONVERT(datetime, REPLACE(kv.[value], \u0027T\u0027, \u0027 \u0027), 120) AS [date],\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027adjustedOn\u0027, \u0027approvedForSplOn\u0027, \u0027clearanceNotificationSentOn\u0027, \u0027disposedOn\u0027, \u0027exemptionApprovedOn\u0027, \u0027finalFormSignedOn\u0027, \u0027interestedReceivedOn\u0027, \u0027offerAcceptedOn\u0027, \u0027removalFromSplApprovedOn\u0027, \u0027removalFromSplRequestOn\u0027, \u0027requestForSplReceivedOn\u0027, \u0027transferredWithinGreOn\u0027 );\r\n": {
							"targetName": "project_timestamp",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"timestamp_type_id": {
									"targetName": "timestamp_type_id",
									"mappingType": "existing"
								},
								"date": {
									"targetName": "\"date\"",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* query to extract from project.metadata table and into project_monetary table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027gainBeforeSpl\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027interestComponent\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027netProceeds\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027gainLoss\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027ocgFinancialStatement\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027offerAmount\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027programCost\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027realtorCommission\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027salesCost\u0027 THEN 9\r\n\tEND AS monetary_type_id,\r\n    kv.[value] AS \"value\" ,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027gainBeforeSpl\u0027, \u0027interestComponent\u0027, \u0027netProceeds\u0027, \u0027gainLoss\u0027, \u0027ocgFinancialStatement\u0027, \u0027offerAmount\u0027, \u0027programCost\u0027, \u0027realtorCommission\u0027, \u0027salesCost\u0027 );\r\n": {
							"targetName": "project_monetary",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"monetary_type_id": {
									"targetName": "monetary_type_id",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* Query to extract relevant data from project.metadata table and into project_task table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n    CASE \r\n        WHEN kv.[value] \u003d \u0027true\u0027 THEN 1\r\n        WHEN kv.[value] \u003d \u0027false\u0027 THEN 0\r\n        ELSE NULL\r\n    END AS is_completed,\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN 16\r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN 17\r\n\tEND AS \"task_id\",\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN JSON_VALUE(p.metadata, \u0027$.priorYearAdjustmentOn\u0027)\r\n                ELSE NULL\r\n            END\r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN p.CreatedOn\r\n                ELSE NULL\r\n            END\r\n        ELSE NULL\r\n    END AS completed_on,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027priorYearAdjustment\u0027, \u0027exemptionRequested\u0027)\r\n\torder by kv.[key]": {
							"targetName": "project_task",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"is_completed": {
									"targetName": "is_completed",
									"mappingType": "existing"
								},
								"task_id": {
									"targetName": "task_id",
									"mappingType": "existing"
								},
								"completed_on": {
									"targetName": "completed_on",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"mappingType": "existing"
								}
							}
						},
						"postgres-jdbc-18ceb57db81-643fa3bb56d54f2f/SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));": {
							"targetName": "\"SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));\"",
							"mappingType": "skip",
							"attributes": {
								"setval": {
									"mappingType": "skip"
								}
							}
						},
						"postgres-jdbc-18ceb57db81-643fa3bb56d54f2f/-- Update existing projects that have depricated statuses with new statuses\nupdate project set status_id \u003d 23 where status_id in (1, 2, 3, 5, 6);\nupdate project set status_id \u003d 14 where status_id in (30, 10, 11, 12);\nupdate project set status_id \u003d 42 where status_id in (43);\nupdate project set status_id \u003d 8 where status_id in (13);\n\n-- Duplicate project_task entries from Approved for ERP to Approved for Exemption\n/* INSERT INTO project_task (project_id, task_id, is_completed, completed_on, created_by_id)\n  SELECT\n      project_id,\n      t_destination.id AS task_id,\n      is_completed,\n      pt.completed_on,\n      \u002700000000-0000-0000-0000-000000000000\u0027\n  FROM\n      project_task pt\n  JOIN task t_origin ON\n      pt.task_id \u003d t_origin.id\n      AND t_origin.status_id \u003d 14\n  JOIN task t_destination \n      ON t_origin.name \u003d t_destination.name \n      AND t_destination.status_id \u003d 15; */\n     \n-- Duplicate project_note entries from Approved for ERP to Approved for Exemption\n/*INSERT INTO project_note (project_id, note_type_id , note , created_by_id)\n  SELECT\n      project_id,\n      n_destination.id AS note_type_id ,\n      note,\n      \u002700000000-0000-0000-0000-000000000000\u0027\n  FROM\n      project_note  pn\n  JOIN note_type n_origin ON\n      pn.note_type_id \u003d n_origin.id\n      AND n_origin.status_id \u003d 14\n  JOIN note_type  n_destination \n      ON n_origin.name \u003d n_destination.name \n      AND n_destination.status_id \u003d 15; */\n     \n-- There are no monetary types associated with the Approved for ERP status\n     \n     \n\n\n\n": {
							"targetName": "-- Update existing projects that have depricated statuses with new statuses\nupdate project set status_id \u003d 23 where status_id in (1, 2, 3, 5, 6);\nupdate project set status_id \u003d 14 where status_id in (30, 10, 11, 12);\nupdate project set status_id \u003d 42 where status_id in (43);\nupdate project set status_id \u003d 8 where status_id in (13);\n\n-- Duplicate project_task entries from Approved for ERP to Approved for Exemption\nINSERT INTO project_task (project_id, task_id, is_completed, completed_on, created_by_id)\n  SELECT\n      project_id,\n      t_destination.id AS task_id,\n      is_completed,\n      pt.completed_on,\n      \u002700000000-0000-0000-0000-000000000000\u0027\n  FROM\n      project_task pt\n  JOIN task t_origin ON\n      pt.task_id \u003d t_origin.id\n      AND t_origin.status_id \u003d 14\n  JOIN task t_destination \n      ON t_origin.name \u003d t_destination.name \n      AND t_destination.status_id \u003d 15;\n     \n-- Duplicate project_note entries from Approved for ERP to Approved for Exemption\nINSERT INTO project_note (project_id, note_type_id , note , created_by_id)\n  SELECT\n      project_id,\n      n_destination.id AS note_type_id ,\n      note,\n      \u002700000000-0000-0000-0000-000000000000\u0027\n  FROM\n      project_note  pn\n  JOIN note_type n_origin ON\n      pn.note_type_id \u003d n_origin.id\n      AND n_origin.status_id \u003d 14\n  JOIN note_type  n_destination \n      ON n_origin.name \u003d n_destination.name \n      AND n_destination.status_id \u003d 15;\n     \n-- There are no monetary types associated with the Approved for ERP status\n     \n     \n\n\n\n",
							"mappingType": "skip"
						}
					}
				},
				"producer": "database_producer",
				"consumer": "database_consumer"
			}
		}
	},
	"59dfaa55-93ba-46d2-a93e-ee265e48eff0": {
		"task": "dataExport",
		"label": "PIMS ETL - Prod to Dev",
		"description": "Export of the Agencies, Roles, Claims, Users, and User Roles",
		"taskFolder": "PIMS ETL",
		"createTime": "202406131044",
		"updateTime": "202406131044",
		"state": {
			"producers": [
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "SELECT TOP (1000) [Id]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [CreatedById]\r\n      ,[CreatedOn]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [UpdatedById] \r\n      ,[UpdatedOn]\r\n      ,[Name]\r\n      ,[IsDisabled]\r\n      ,[SortOrder]\r\n      ,[Code]\r\n      ,[Description]\r\n      ,[ParentId]\r\n      ,[Email]\r\n      ,[SendEmail]\r\n      ,[AddressTo]\r\n      ,[CCEmail]\r\n  FROM [pims].[dbo].[Agencies]\r\n  \r\n  ORDER BY ParentId"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "\r\nSELECT \r\n    u.[Id],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tWHEN u.[CreatedById] \u003d \u0027FB95044D-9942-480E-BD1E-1F9EE9BF1EB3\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE u.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.IsDisabled \u003d 0 THEN \u0027Active\u0027\r\n\t\tELSE \u0027Disabled\u0027\r\n\t  END AS [Status],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn,\r\n    urd.UserId,\r\n    ua.AgencyId, \r\n    STRING_AGG(urd.RoleName, \u0027, \u0027) AS Roles,\r\n    CASE \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%System Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial Reporter%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial%\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Agency Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Analyst%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Manager%\u0027 THEN \u002700000000-0000-0000-0000-000000000001\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister Assistant%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Executive Director%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%View Only Properties%\u0027 THEN \u002700000000-0000-0000-0000-000000000002\u0027\r\n\t   \r\n    END AS UserType\r\nFROM Users u\r\nLEFT JOIN (\r\n    SELECT \r\n        ur.UserId,\r\n        MAX(ur.CreatedOn) AS CreatedOn,\r\n        STRING_AGG(r.Name, \u0027, \u0027) AS RoleName\r\n    FROM [pims].[dbo].[UserRoles] ur\r\n    INNER JOIN Roles r ON ur.RoleId \u003d r.Id\r\n    GROUP BY ur.UserId\r\n) AS urd ON u.Id \u003d urd.UserId\r\n\r\nLEFT OUTER JOIN (\r\n    SELECT UserId, MIN(AgencyId) AS AgencyId\r\n    FROM UserAgencies\r\n    GROUP BY UserId\r\n) ua_min ON u.Id \u003d ua_min.UserId\r\nLEFT OUTER JOIN UserAgencies ua ON u.Id \u003d ua.UserId AND ua.AgencyId \u003d ua_min.AgencyId\r\n\r\nWHERE u.Id \u003c\u003e \u002700000000-0000-0000-0000-000000000000\u0027\r\n\r\nGROUP BY u.[Id],\r\n    u.[CreatedById],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn, \r\n    urd.UserId, \r\n    ua.AgencyId\r\nORDER BY u.CreatedOn, u.UpdatedOn"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT p.[Id],\r\n\t  CASE \r\n\t\tWHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE p.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    p.[CreatedOn],\r\n    p.[UpdatedById],\r\n    p.[UpdatedOn],\r\n    p.[Name],\r\n    p.[Description],\r\n    p.[ClassificationId],\r\n    p.[AgencyId],\r\n    p.[IsSensitive],\r\n    p.[IsVisibleToOtherAgencies],\r\n    p.[PID],\r\n    p.[PIN],\r\n    p.[LandArea],\r\n    p.[LandLegalDescription],\r\n    p.[Zoning],\r\n    p.[ZoningPotential],\r\n    p.[NotOwned],\r\n\tCONVERT(VARCHAR(40), CAST(Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(Location.Lat AS DECIMAL(18, 14))) AS Location,\r\n    CASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS AdministrativeAreaId,  \r\n\ta.AdministrativeArea,\r\n\ta.Address1, \r\n\ta.Postal,\r\n\tpp.ParcelId as ParentID,\r\n\t0 as PropertyTypeID\r\nFROM \r\n    [pims].[dbo].[Parcels] p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n    LEFT OUTER JOIN ParcelParcels pp\r\n    ON pp.SubdivisionId \u003d p.Id"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT p.[Id],\r\n\tCASE \r\n\t  WHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t  ELSE p.[CreatedById]\r\n\tEND AS created_by_id,\r\n    p.[CreatedOn] AS created_on,\r\n    p.[UpdatedById] AS updated_by_id,\r\n    p.[UpdatedOn] AS updated_on,\r\n    p.[Name] AS [name],\r\n    p.[Description] AS [description],\r\n    p.[ClassificationId] AS classification_id,\r\n    p.BuildingConstructionTypeId AS building_construction_type_id,\r\n    p.[AgencyId] AS agency_id,\r\n    p.[IsSensitive] AS is_sensitive,\r\n    p.[IsVisibleToOtherAgencies] AS is_visible_to_other_agencies,\r\n\tp.BuildingFloorCount AS building_floor_count,\r\n\tp.BuildingPredominateUseId AS building_predominate_use_id,\r\n\tp.BuildingTenancy AS building_tenancy,\r\n\tp.RentableArea AS rentable_area,\r\n\tp.BuildingOccupantTypeId AS building_occupant_type_id,\r\n\tp.LeaseExpiry AS lease_expiry,\r\n\tp.OccupantName AS occupant_name,\r\n\tp.TransferLeaseOnSale AS transfer_lease_on_sale,\r\n\tp.BuildingTenancyUpdatedOn AS building_tenancy_updated_on,\r\n\tp.EncumbranceReason AS encumbrance_reason,\r\n\tp.LeasedLandMetadata AS leased_land_metadata,\r\n\tp.TotalArea AS total_area,\r\n\tCONVERT(VARCHAR(40), CAST(p.Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(p.Location.Lat AS DECIMAL(18, 14))) AS [location],\r\n\tCASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS administrative_area_id,  \r\n\ta.Address1 AS address1, \r\n\ta.Postal AS postal,\r\n\t1 as property_type_id,\r\n\tp.ProjectNumbers AS project_numbers, \r\n    COALESCE(b.PID, s.PID) AS pid,\r\n    COALESCE(b.PIN, s.PIN) AS pin\r\nFROM \r\n    [pims].[dbo].Buildings p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n\tLEFT OUTER JOIN ParcelBuildings pb\r\n\tON p.Id \u003d pb.BuildingId\r\n\tLEFT OUTER JOIN Parcels b\r\n\tON pb.ParcelId \u003d b.Id\r\n\tLEFT OUTER JOIN spreadsheet_data s\r\n\tON s.BuildingId \u003d p.Id\r\nWHERE p.BuildingPredominateUseId \u003c\u003d 54 "
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/Projects"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectStatusHistory"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectProperties"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectSnapshots"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "entity",
						"project": "General",
						"entityId": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/NotificationQueue"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [ParcelId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Firm]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[ParcelEvaluations]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [ParcelId]\r\n      ,[FiscalYear]\r\n      ,[Key]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n      ,[EffectiveDate]\r\n  FROM [dbo].[ParcelFiscals]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\n  SELECT BuildingId,\r\n  FiscalYear,\r\n  [Key],\r\n  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById],\r\n  CreatedOn,\r\n  UpdatedById,\r\n  UpdatedOn,\r\n  [Value],\r\n  Note,\r\n  EffectiveDate\r\n  FROM BuildingFiscals \r\n  \r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [BuildingId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[BuildingEvaluations]\r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT [ProjectId]\r\n      ,[TaskId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsCompleted]\r\n      ,[CompletedOn]\r\n  FROM [dbo].[ProjectTasks]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsFinal]\r\n      ,[Name]\r\n      ,[From]\r\n      ,[To]\r\n      ,[ReportType]\r\n  FROM [dbo].[ProjectReports]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "\r\nSELECT [ProjectId]\r\n      ,[AgencyId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[OfferAmount]\r\n      ,[NotificationId]\r\n      ,[Response]\r\n      ,[ReceivedOn]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectAgencyResponses]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[ProjectId]\r\n      ,[NoteType]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectNotes]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "\r\n/* query to extract from project.metadata table and into project_note table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027appraisedBy\u0027 THEN 17\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedBy\u0027 THEN 23\r\n\t\tWHEN kv.[key] \u003d \u0027plannedFutureUse\u0027 THEN 24\r\n\t\tWHEN kv.[key] \u003d \u0027preliminaryFormSignedBy\u0027 THEN 25\r\n\t\tWHEN kv.[key] \u003d \u0027purchaser\u0027 THEN 26\r\n\t\tWHEN kv.[key] \u003d \u0027realtor\u0027 THEN 27\r\n\t\tWHEN kv.[key] \u003d \u0027realtorRate\u0027 THEN 28\r\n\tEND AS note_type_id,\r\n    kv.[value] AS \"note\",\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027purchaser\u0027, \u0027appraisedBy\u0027, \u0027finalFormSignedBy\u0027, \u0027plannedFutureUse\u0027, \u0027preliminaryFormSignedBy\u0027, \u0027realtor\u0027 , \u0027realtorRate\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"defaultSchema": "dbo",
						"query": "/* query to extract from project.metadata table and into project_timestamp table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027adjustedOn\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027approvedForSplOn\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027clearanceNotificationSentOn\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027disposedOn\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027exemptionApprovedOn\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedOn\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027interestedReceivedOn\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027offerAcceptedOn\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplApprovedOn\u0027 THEN 9\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplRequestOn\u0027 THEN 10\r\n\t\tWHEN kv.[key] \u003d \u0027requestForSplReceivedOn\u0027 THEN 11\r\n\t\tWHEN kv.[key] \u003d \u0027transferredWithinGreOn\u0027 THEN 12\r\n\tEND AS timestamp_type_id,\r\n    CONVERT(datetime, REPLACE(kv.[value], \u0027T\u0027, \u0027 \u0027), 120) AS [date],\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027adjustedOn\u0027, \u0027approvedForSplOn\u0027, \u0027clearanceNotificationSentOn\u0027, \u0027disposedOn\u0027, \u0027exemptionApprovedOn\u0027, \u0027finalFormSignedOn\u0027, \u0027interestedReceivedOn\u0027, \u0027offerAcceptedOn\u0027, \u0027removalFromSplApprovedOn\u0027, \u0027removalFromSplRequestOn\u0027, \u0027requestForSplReceivedOn\u0027, \u0027transferredWithinGreOn\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "/* query to extract from project.metadata table and into project_monetary table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027gainBeforeSpl\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027interestComponent\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027netProceeds\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027gainLoss\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027ocgFinancialStatement\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027offerAmount\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027programCost\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027realtorCommission\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027salesCost\u0027 THEN 9\r\n\tEND AS monetary_type_id,\r\n    kv.[value] AS \"value\" ,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027gainBeforeSpl\u0027, \u0027interestComponent\u0027, \u0027netProceeds\u0027, \u0027gainLoss\u0027, \u0027ocgFinancialStatement\u0027, \u0027offerAmount\u0027, \u0027programCost\u0027, \u0027realtorCommission\u0027, \u0027salesCost\u0027 );\r\n"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "mssql_jtds_legacy-18dce354301-1e68702299e0ca14",
						"defaultCatalog": "pims",
						"query": "/* Query to extract relevant data from project.metadata table and into project_task table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n    CASE \r\n        WHEN kv.[value] \u003d \u0027true\u0027 THEN 1\r\n        WHEN kv.[value] \u003d \u0027false\u0027 THEN 0\r\n        ELSE NULL\r\n    END AS is_completed,\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN 16\r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN 17\r\n\tEND AS \"task_id\",\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN JSON_VALUE(p.metadata, \u0027$.priorYearAdjustmentOn\u0027)\r\n                ELSE NULL\r\n            END\r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN p.CreatedOn\r\n                ELSE NULL\r\n            END\r\n        ELSE NULL\r\n    END AS completed_on,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027priorYearAdjustment\u0027, \u0027exemptionRequested\u0027)\r\n\torder by kv.[key]"
					}
				},
				{
					"type": "databaseTransferProducer",
					"location": {
						"type": "query",
						"project": "General",
						"dataSource": "postgres-jdbc-18dd2b052a7-539b625bbf9f91bf",
						"defaultCatalog": "pims",
						"defaultSchema": "public",
						"query": "SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));"
					}
				}
			],
			"consumers": [
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				},
				{
					"type": "databaseTransferConsumer"
				}
			],
			"configuration": {
				"maxJobCount": 1,
				"showFinalMessage": true,
				"DatabaseTransferProducer": {
					"extractType": "SEGMENTS",
					"segmentSize": 1000,
					"fetchSize": 10000,
					"openNewConnections": true,
					"queryRowCount": false,
					"selectedColumnsOnly": false,
					"selectedRowsOnly": false
				},
				"DatabaseTransferConsumer": {
					"entityId": "postgres-jdbc-18dd2b052a7-539b625bbf9f91bf/pims-crunchy/public",
					"openNewConnections": false,
					"useTransactions": true,
					"commitAfterRows": 1000,
					"useMultiRowInsert": false,
					"multiRowInsertBatch": 500,
					"skipBindValues": false,
					"disableUsingBatches": true,
					"ignoreDuplicateRows": false,
					"onDuplicateKeyMethod": "pgInsertIgnore",
					"transferAutoGeneratedColumns": true,
					"disableReferentialIntegrity": true,
					"useBulkLoad": false,
					"truncateBeforeLoad": false,
					"openTableOnFinish": true,
					"mappings": {
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT TOP (1000) [Id]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [CreatedById]\r\n      ,[CreatedOn]\r\n      ,\u002700000000-0000-0000-0000-000000000000\u0027 as [UpdatedById] \r\n      ,[UpdatedOn]\r\n      ,[Name]\r\n      ,[IsDisabled]\r\n      ,[SortOrder]\r\n      ,[Code]\r\n      ,[Description]\r\n      ,[ParentId]\r\n      ,[Email]\r\n      ,[SendEmail]\r\n      ,[AddressTo]\r\n      ,[CCEmail]\r\n  FROM [pims].[dbo].[Agencies]\r\n  \r\n  ORDER BY ParentId": {
							"targetName": "agency",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "serial4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "name",
									"mappingType": "existing"
								},
								"isdisabled": {
									"targetName": "is_disabled",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"sortorder": {
									"targetName": "sort_order",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"code": {
									"targetName": "code",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"parentid": {
									"targetName": "parent_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"email": {
									"targetName": "email",
									"targetType": "varchar(150)",
									"mappingType": "existing"
								},
								"sendemail": {
									"targetName": "send_email",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"addressto": {
									"targetName": "address_to",
									"mappingType": "existing"
								},
								"ccemail": {
									"targetName": "cc_email",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT \r\n    u.[Id],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tWHEN u.[CreatedById] \u003d \u0027FB95044D-9942-480E-BD1E-1F9EE9BF1EB3\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE u.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    \r\n\t  CASE \r\n\t\tWHEN u.IsDisabled \u003d 0 THEN \u0027Active\u0027\r\n\t\tELSE \u0027Disabled\u0027\r\n\t  END AS [Status],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn,\r\n    urd.UserId,\r\n    ua.AgencyId, \r\n    STRING_AGG(urd.RoleName, \u0027, \u0027) AS Roles,\r\n    CASE \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%System Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial Reporter%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%SRES Financial%\u0027 THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Agency Administrator%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Analyst%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Real Estate Manager%\u0027 THEN \u002700000000-0000-0000-0000-000000000001\u0027\r\n             \r\n        WHEN STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister Assistant%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Assistant Deputy Minister%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%Executive Director%\u0027\r\n             OR STRING_AGG(urd.RoleName, \u0027, \u0027) LIKE \u0027%View Only Properties%\u0027 THEN \u002700000000-0000-0000-0000-000000000002\u0027\r\n\t   \r\n    END AS UserType\r\nFROM Users u\r\nLEFT JOIN (\r\n    SELECT \r\n        ur.UserId,\r\n        MAX(ur.CreatedOn) AS CreatedOn,\r\n        STRING_AGG(r.Name, \u0027, \u0027) AS RoleName\r\n    FROM [pims].[dbo].[UserRoles] ur\r\n    INNER JOIN Roles r ON ur.RoleId \u003d r.Id\r\n    GROUP BY ur.UserId\r\n) AS urd ON u.Id \u003d urd.UserId\r\n\r\nLEFT OUTER JOIN (\r\n    SELECT UserId, MIN(AgencyId) AS AgencyId\r\n    FROM UserAgencies\r\n    GROUP BY UserId\r\n) ua_min ON u.Id \u003d ua_min.UserId\r\nLEFT OUTER JOIN UserAgencies ua ON u.Id \u003d ua.UserId AND ua.AgencyId \u003d ua_min.AgencyId\r\n\r\nWHERE u.Id \u003c\u003e \u002700000000-0000-0000-0000-000000000000\u0027\r\n\r\nGROUP BY u.[Id],\r\n    u.[CreatedById],\r\n    u.[UpdatedById],\r\n    u.[UpdatedOn],\r\n    u.[Username],\r\n    u.[DisplayName],\r\n    u.[FirstName],\r\n    u.[MiddleName],\r\n    u.[LastName],\r\n    u.[Email],\r\n    u.[Position],\r\n    u.[IsDisabled],\r\n    u.[EmailVerified],\r\n    u.[Note],\r\n    u.[IsSystem],\r\n    u.[LastLogin],\r\n    u.[ApprovedById],\r\n    u.[ApprovedOn],\r\n    u.[KeycloakUserId],\r\n    u.CreatedOn, \r\n    urd.UserId, \r\n    ua.AgencyId\r\nORDER BY u.CreatedOn, u.UpdatedOn": {
							"targetName": "user",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"status": {
									"targetName": "status",
									"targetType": "user_status_enum",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"username": {
									"targetName": "username",
									"targetType": "varchar(100)",
									"mappingType": "existing"
								},
								"displayname": {
									"targetName": "display_name",
									"mappingType": "existing"
								},
								"firstname": {
									"targetName": "first_name",
									"mappingType": "existing"
								},
								"middlename": {
									"targetName": "middle_name",
									"mappingType": "existing"
								},
								"lastname": {
									"targetName": "last_name",
									"mappingType": "existing"
								},
								"email": {
									"targetName": "email",
									"mappingType": "existing"
								},
								"Position": {
									"targetName": "\"Position\"",
									"mappingType": "existing"
								},
								"isdisabled": {
									"targetName": "is_disabled",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"emailverified": {
									"targetName": "email_verified",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"targetType": "varchar(1000)",
									"mappingType": "existing"
								},
								"issystem": {
									"targetName": "is_system",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"lastlogin": {
									"targetName": "last_login",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"approvedbyid": {
									"targetName": "approved_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"approvedon": {
									"targetName": "approved_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"keycloakuserid": {
									"targetName": "keycloak_user_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"userid": {
									"targetName": "user_id",
									"mappingType": "skip"
								},
								"agencyid": {
									"targetName": "agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"roles": {
									"targetName": "role_id",
									"targetType": "uuid",
									"mappingType": "skip"
								},
								"usertype": {
									"targetName": "role_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT p.[Id],\r\n\t  CASE \r\n\t\tWHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE p.[CreatedById]\r\n\t  END AS [CreatedById],\r\n    p.[CreatedOn],\r\n    p.[UpdatedById],\r\n    p.[UpdatedOn],\r\n    p.[Name],\r\n    p.[Description],\r\n    p.[ClassificationId],\r\n    p.[AgencyId],\r\n    p.[IsSensitive],\r\n    p.[IsVisibleToOtherAgencies],\r\n    p.[PID],\r\n    p.[PIN],\r\n    p.[LandArea],\r\n    p.[LandLegalDescription],\r\n    p.[Zoning],\r\n    p.[ZoningPotential],\r\n    p.[NotOwned],\r\n\tCONVERT(VARCHAR(40), CAST(Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(Location.Lat AS DECIMAL(18, 14))) AS Location,\r\n    CASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS AdministrativeAreaId,  \r\n\ta.AdministrativeArea,\r\n\ta.Address1, \r\n\ta.Postal,\r\n\tpp.ParcelId as ParentID,\r\n\t0 as PropertyTypeID\r\nFROM \r\n    [pims].[dbo].[Parcels] p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n    LEFT OUTER JOIN ParcelParcels pp\r\n    ON pp.SubdivisionId \u003d p.Id": {
							"targetName": "parcel",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "name",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"classificationid": {
									"targetName": "classification_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"issensitive": {
									"targetName": "is_sensitive",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"isvisibletootheragencies": {
									"targetName": "is_visible_to_other_agencies",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"pid": {
									"targetName": "pid",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"pin": {
									"targetName": "pin",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"landarea": {
									"targetName": "land_area",
									"targetType": "float4",
									"mappingType": "existing"
								},
								"landlegaldescription": {
									"targetName": "land_legal_description",
									"mappingType": "existing"
								},
								"zoning": {
									"targetName": "zoning",
									"mappingType": "existing"
								},
								"zoningpotential": {
									"targetName": "zoning_potential",
									"mappingType": "existing"
								},
								"notowned": {
									"targetName": "notowned",
									"mappingType": "skip"
								},
								"Location": {
									"targetName": "\"location\"",
									"targetType": "point",
									"mappingType": "existing"
								},
								"administrativeareaid": {
									"targetName": "administrative_area_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"administrativearea": {
									"targetName": "administrativearea",
									"mappingType": "skip"
								},
								"address1": {
									"targetName": "address1",
									"mappingType": "existing"
								},
								"postal": {
									"targetName": "postal",
									"mappingType": "existing"
								},
								"parentid": {
									"targetName": "parent_parcel_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"propertytypeid": {
									"targetName": "property_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT p.[Id],\r\n\tCASE \r\n\t  WHEN p.[CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t  ELSE p.[CreatedById]\r\n\tEND AS created_by_id,\r\n    p.[CreatedOn] AS created_on,\r\n    p.[UpdatedById] AS updated_by_id,\r\n    p.[UpdatedOn] AS updated_on,\r\n    p.[Name] AS [name],\r\n    p.[Description] AS [description],\r\n    p.[ClassificationId] AS classification_id,\r\n    p.BuildingConstructionTypeId AS building_construction_type_id,\r\n    p.[AgencyId] AS agency_id,\r\n    p.[IsSensitive] AS is_sensitive,\r\n    p.[IsVisibleToOtherAgencies] AS is_visible_to_other_agencies,\r\n\tp.BuildingFloorCount AS building_floor_count,\r\n\tp.BuildingPredominateUseId AS building_predominate_use_id,\r\n\tp.BuildingTenancy AS building_tenancy,\r\n\tp.RentableArea AS rentable_area,\r\n\tp.BuildingOccupantTypeId AS building_occupant_type_id,\r\n\tp.LeaseExpiry AS lease_expiry,\r\n\tp.OccupantName AS occupant_name,\r\n\tp.TransferLeaseOnSale AS transfer_lease_on_sale,\r\n\tp.BuildingTenancyUpdatedOn AS building_tenancy_updated_on,\r\n\tp.EncumbranceReason AS encumbrance_reason,\r\n\tp.LeasedLandMetadata AS leased_land_metadata,\r\n\tp.TotalArea AS total_area,\r\n\tCONVERT(VARCHAR(40), CAST(p.Location.Long AS DECIMAL(18, 14))) + \u0027, \u0027 + CONVERT(VARCHAR(40), CAST(p.Location.Lat AS DECIMAL(18, 14))) AS [location],\r\n\tCASE \r\n        WHEN a.AdministrativeArea \u003d \u0027The Corporation of the City of Nelson\u0027 THEN 188\r\n        WHEN a.AdministrativeArea \u003d \u0027Township of Langley\u0027 THEN 150\r\n        WHEN a.AdministrativeArea \u003d \u0027District of North Vancouver\u0027 THEN 196\r\n        WHEN a.AdministrativeArea \u003d \u0027Coombs\u0027 THEN 483\r\n        WHEN a.AdministrativeArea \u003d \u0027Brookmere\u0027 THEN 481\r\n        WHEN a.AdministrativeArea \u003d \u0027Thornhill\u0027 THEN 501\r\n        WHEN a.AdministrativeArea \u003d \u0027Two Mile\u0027 THEN 502\r\n        WHEN a.AdministrativeArea \u003d \u0027Crofton\u0027 THEN 484\r\n        WHEN a.AdministrativeArea \u003d \u0027East Sooke\u0027 THEN 485\r\n        WHEN a.AdministrativeArea \u003d \u0027Mudge Island\u0027 THEN 492\r\n        WHEN a.AdministrativeArea \u003d \u0027Coal Harbour\u0027 THEN 482\r\n        WHEN a.AdministrativeArea \u003d \u0027Miworth\u0027 THEN 490\r\n        WHEN a.AdministrativeArea \u003d \u0027Lake Errock\u0027 THEN 489\r\n        WHEN a.AdministrativeArea \u003d \u0027Black Creek\u0027 THEN 479\r\n        WHEN a.AdministrativeArea \u003d \u0027Whaletown\u0027 THEN 504\r\n        WHEN a.AdministrativeArea \u003d \u0027Quathiaski Cove\u0027 THEN 494\r\n        WHEN a.AdministrativeArea \u003d \u0027Big Bay in Stuart Island\u0027 THEN 478\r\n        WHEN a.AdministrativeArea \u003d \u0027Surge Narrows in Read Island\u0027 THEN 500\r\n        WHEN a.AdministrativeArea \u003d \u0027Rock Bay in Sayward\u0027 THEN 497\r\n        WHEN a.AdministrativeArea \u003d \u0027Granite Bay in Quadra Island\u0027 THEN 487\r\n        WHEN a.AdministrativeArea \u003d \u0027Moberly Lake\u0027 THEN 491\r\n        WHEN a.AdministrativeArea \u003d \u0027Quatsino\u0027 THEN 495\r\n        WHEN a.AdministrativeArea \u003d \u0027Bouchie Lake\u0027 THEN 480\r\n        WHEN a.AdministrativeArea \u003d \u0027West Lake\u0027 THEN 503\r\n        WHEN a.AdministrativeArea \u003d \u0027Salmon Valley\u0027 THEN 498\t\t\r\n        WHEN a.AdministrativeArea \u003d \u0027Red Rock\u0027 THEN 496\r\n        WHEN a.AdministrativeArea \u003d \u0027Stoner\u0027 THEN 499\r\n        WHEN a.AdministrativeArea \u003d \u0027Pineview FFG\u0027 THEN 493\r\n        WHEN a.AdministrativeArea \u003d \u0027Wonowon\u0027 THEN 506\r\n        WHEN a.AdministrativeArea \u003d \u0027Halfway River\u0027 THEN 488\r\n        WHEN a.AdministrativeArea \u003d \u0027Giscome\u0027 THEN 486\r\n        WHEN a.AdministrativeArea \u003d \u0027Willow River\u0027 THEN 505\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lower Nicola\u0027 THEN 314\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Belcarra\u0027 THEN 425\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Tsawwassen\u0027 THEN 315\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Anmore\u0027 THEN 432\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Lake Cowichan\u0027 THEN 442\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027North Cowichan\u0027 THEN 450\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Port Edward\u0027 THEN 347\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Spallumcheen\u0027 THEN 318\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Jumbo Glacier Mountain Resort Municipality\u0027 THEN 438\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Kent\u0027 THEN 439\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Highlands\u0027 THEN 348\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Slocan\u0027 THEN 380\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Warfield\u0027 THEN 448\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Bowser\u0027 THEN 507 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gingolx\u0027 THEN 508 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Gitwinksihlkw\u0027 THEN 509 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Laxgalts ap\u0027 THEN 510 \r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Read Island\u0027 THEN 511\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Daajing Giids\u0027 THEN 512\r\n\t\tWHEN a.AdministrativeArea \u003d \u0027Royston\u0027 THEN 513\r\n        ELSE aa.Id \r\n    END AS administrative_area_id,  \r\n\ta.Address1 AS address1, \r\n\ta.Postal AS postal,\r\n\t1 as property_type_id,\r\n\tp.ProjectNumbers AS project_numbers, \r\n    COALESCE(b.PID, s.PID) AS pid,\r\n    COALESCE(b.PIN, s.PIN) AS pin\r\nFROM \r\n    [pims].[dbo].Buildings p\r\n\tINNER JOIN Addresses a\r\n\tON p.AddressId \u003d a.Id\r\n\tLEFT OUTER JOIN AdministrativeAreas aa\r\n\tON aa.Name \u003d a.AdministrativeArea\r\n\tLEFT OUTER JOIN ParcelBuildings pb\r\n\tON p.Id \u003d pb.BuildingId\r\n\tLEFT OUTER JOIN Parcels b\r\n\tON pb.ParcelId \u003d b.Id\r\n\tLEFT OUTER JOIN spreadsheet_data s\r\n\tON s.BuildingId \u003d p.Id\r\nWHERE p.BuildingPredominateUseId \u003c\u003d 54 ": {
							"targetName": "building",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"name": {
									"targetName": "\"name\"",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"mappingType": "existing"
								},
								"classification_id": {
									"targetName": "classification_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"building_construction_type_id": {
									"targetName": "building_construction_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"agency_id": {
									"targetName": "agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"is_sensitive": {
									"targetName": "is_sensitive",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"is_visible_to_other_agencies": {
									"targetName": "is_visible_to_other_agencies",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"building_floor_count": {
									"targetName": "building_floor_count",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"building_predominate_use_id": {
									"targetName": "building_predominate_use_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"building_tenancy": {
									"targetName": "building_tenancy",
									"mappingType": "existing"
								},
								"rentable_area": {
									"targetName": "rentable_area",
									"targetType": "float4",
									"mappingType": "existing"
								},
								"building_occupant_type_id": {
									"targetName": "building_occupant_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"lease_expiry": {
									"targetName": "lease_expiry",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"occupant_name": {
									"targetName": "occupant_name",
									"mappingType": "existing"
								},
								"transfer_lease_on_sale": {
									"targetName": "transfer_lease_on_sale",
									"mappingType": "skip"
								},
								"building_tenancy_updated_on": {
									"targetName": "building_tenancy_updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"encumbrance_reason": {
									"targetName": "encumbrance_reason",
									"mappingType": "existing"
								},
								"leased_land_metadata": {
									"targetName": "leased_land_metadata",
									"mappingType": "skip"
								},
								"total_area": {
									"targetName": "total_area",
									"targetType": "float4",
									"mappingType": "existing"
								},
								"location": {
									"targetName": "\"location\"",
									"targetType": "point",
									"mappingType": "existing"
								},
								"administrative_area_id": {
									"targetName": "administrative_area_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"address1": {
									"targetName": "address1",
									"targetType": "varchar(150)",
									"mappingType": "existing"
								},
								"postal": {
									"targetName": "postal",
									"mappingType": "existing"
								},
								"property_type_id": {
									"targetName": "property_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"project_numbers": {
									"targetName": "project_numbers",
									"targetType": "varchar(2000)",
									"mappingType": "existing"
								},
								"pid": {
									"targetName": "pid",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"pin": {
									"targetName": "pin",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/Projects": {
							"targetName": "project",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "serial4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"targetType": "bytea",
									"mappingType": "skip"
								},
								"projectnumber": {
									"targetName": "project_number",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "name",
									"mappingType": "existing"
								},
								"workflowid": {
									"targetName": "workflow_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"manager": {
									"targetName": "manager",
									"mappingType": "existing"
								},
								"reportedfiscalyear": {
									"targetName": "reported_fiscal_year",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"actualfiscalyear": {
									"targetName": "actual_fiscal_year",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"statusid": {
									"targetName": "status_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"description": {
									"targetName": "description",
									"targetType": "text",
									"mappingType": "existing"
								},
								"tierlevelid": {
									"targetName": "tier_level_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"riskid": {
									"targetName": "risk_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"metadata": {
									"targetName": "metadata",
									"mappingType": "skip"
								},
								"submittedon": {
									"targetName": "submitted_on",
									"mappingType": "existing"
								},
								"approvedon": {
									"targetName": "approved_on",
									"mappingType": "existing"
								},
								"deniedon": {
									"targetName": "denied_on",
									"mappingType": "existing"
								},
								"cancelledon": {
									"targetName": "cancelled_on",
									"mappingType": "existing"
								},
								"completedon": {
									"targetName": "completed_on",
									"mappingType": "existing"
								},
								"netbook": {
									"targetName": "net_book",
									"mappingType": "existing"
								},
								"market": {
									"targetName": "market",
									"mappingType": "existing"
								},
								"assessed": {
									"targetName": "assessed",
									"mappingType": "existing"
								},
								"appraised": {
									"targetName": "appraised",
									"mappingType": "existing"
								},
								"projecttype": {
									"targetName": "project_type",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectStatusHistory": {
							"targetName": "project_status_history",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "serial4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"workflowid": {
									"targetName": "workflow_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"statusid": {
									"targetName": "status_id",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectNumbers": {
							"targetName": "project_number",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "skip"
								},
								"createdbyid": {
									"targetName": "createdbyid",
									"mappingType": "skip"
								},
								"createdon": {
									"targetName": "createdon",
									"mappingType": "skip"
								},
								"updatedbyid": {
									"targetName": "updatedbyid",
									"mappingType": "skip"
								},
								"updatedon": {
									"targetName": "updatedon",
									"mappingType": "skip"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectProperties": {
							"targetName": "project_property",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "serial4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"propertytype": {
									"targetName": "property_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"parcelid": {
									"targetName": "parcel_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"buildingid": {
									"targetName": "building_id",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/ProjectSnapshots": {
							"targetName": "project_snapshot",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "serial4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"netbook": {
									"targetName": "net_book",
									"mappingType": "existing"
								},
								"market": {
									"targetName": "market",
									"mappingType": "existing"
								},
								"assessed": {
									"targetName": "assessed",
									"mappingType": "existing"
								},
								"appraised": {
									"targetName": "appraised",
									"mappingType": "existing"
								},
								"snapshoton": {
									"targetName": "snapshot_on",
									"mappingType": "existing"
								},
								"metadata": {
									"targetName": "metadata",
									"mappingType": "skip"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/pims/dbo/NotificationQueue": {
							"targetName": "notification_queue",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"mappingType": "existing"
								},
								"rowversion": {
									"targetName": "rowversion",
									"mappingType": "skip"
								},
								"Key": {
									"targetName": "\"Key\"",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"status": {
									"targetName": "status",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"priority": {
									"targetName": "priority",
									"mappingType": "existing"
								},
								"Encoding": {
									"targetName": "\"Encoding\"",
									"mappingType": "existing"
								},
								"sendon": {
									"targetName": "send_on",
									"mappingType": "existing"
								},
								"To": {
									"targetName": "\"To\"",
									"mappingType": "existing"
								},
								"subject": {
									"targetName": "subject",
									"mappingType": "existing"
								},
								"bodytype": {
									"targetName": "body_type",
									"mappingType": "existing"
								},
								"body": {
									"targetName": "body",
									"targetType": "text",
									"mappingType": "existing"
								},
								"bcc": {
									"targetName": "bcc",
									"mappingType": "existing"
								},
								"cc": {
									"targetName": "cc",
									"mappingType": "existing"
								},
								"tag": {
									"targetName": "tag",
									"mappingType": "existing"
								},
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"toagencyid": {
									"targetName": "to_agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"templateid": {
									"targetName": "template_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"chesmessageid": {
									"targetName": "ches_message_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"chestransactionid": {
									"targetName": "ches_transaction_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [ParcelId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Firm]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[ParcelEvaluations]": {
							"targetName": "parcel_evaluation",
							"mappingType": "existing",
							"attributes": {
								"parcelid": {
									"targetName": "parcel_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Date": {
									"targetName": "\"year\"",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "evaluation_key_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"firm": {
									"targetName": "firm",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [ParcelId]\r\n      ,[FiscalYear]\r\n      ,[Key]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n      ,[EffectiveDate]\r\n  FROM [dbo].[ParcelFiscals]": {
							"targetName": "parcel_fiscal",
							"mappingType": "existing",
							"attributes": {
								"parcelid": {
									"targetName": "parcel_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"fiscalyear": {
									"targetName": "fiscal_year",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "fiscal_key_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"effectivedate": {
									"targetName": "effective_date",
									"targetType": "timestamp",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\n  SELECT BuildingId,\r\n  FiscalYear,\r\n  [Key],\r\n  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById],\r\n  CreatedOn,\r\n  UpdatedById,\r\n  UpdatedOn,\r\n  [Value],\r\n  Note,\r\n  EffectiveDate\r\n  FROM BuildingFiscals \r\n  \r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)": {
							"targetName": "building_fiscal",
							"mappingType": "existing",
							"attributes": {
								"buildingid": {
									"targetName": "building_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"fiscalyear": {
									"targetName": "fiscal_year",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "fiscal_key_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								},
								"effectivedate": {
									"targetName": "effective_date",
									"targetType": "timestamp",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [BuildingId]\r\n      ,YEAR([Date]) AS [Date]\r\n      ,[Key]\r\n      ,\r\n\t  CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[Value]\r\n      ,[Note]\r\n  FROM [pims].[dbo].[BuildingEvaluations]\r\nWHERE BuildingId IN (\r\n\tSELECT b.Id \r\n\tFROM Buildings b\r\n\tWHERE b.BuildingPredominateUseId \u003c\u003d 54\r\n)": {
							"targetName": "building_evaluation",
							"mappingType": "existing",
							"attributes": {
								"buildingid": {
									"targetName": "building_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Date": {
									"targetName": "\"year\"",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"Key": {
									"targetName": "evaluation_key_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT [ProjectId]\r\n      ,[TaskId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsCompleted]\r\n      ,[CompletedOn]\r\n  FROM [dbo].[ProjectTasks]": {
							"targetName": "project_task",
							"mappingType": "existing",
							"attributes": {
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"taskid": {
									"targetName": "task_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"CreatedById\r\n      ,[CreatedOn": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"iscompleted": {
									"targetName": "is_completed",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"completedon": {
									"targetName": "completed_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[IsFinal]\r\n      ,[Name]\r\n      ,[From]\r\n      ,[To]\r\n      ,[ReportType]\r\n  FROM [dbo].[ProjectReports]": {
							"targetName": "project_report",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"isfinal": {
									"targetName": "is_final",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"Name": {
									"targetName": "name",
									"mappingType": "existing"
								},
								"From": {
									"targetName": "\"From\"",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"To": {
									"targetName": "\"To\"",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"reporttype": {
									"targetName": "report_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\nSELECT [ProjectId]\r\n      ,[AgencyId]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[OfferAmount]\r\n      ,[NotificationId]\r\n      ,[Response]\r\n      ,[ReceivedOn]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectAgencyResponses]": {
							"targetName": "project_agency_response",
							"mappingType": "existing",
							"attributes": {
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"agencyid": {
									"targetName": "agency_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"offeramount": {
									"targetName": "offer_amount",
									"mappingType": "existing"
								},
								"notificationid": {
									"targetName": "notification_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"response": {
									"targetName": "response",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"receivedon": {
									"targetName": "received_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/SELECT [Id]\r\n      ,CASE \r\n\t\tWHEN [CreatedById] IS NULL THEN \u002700000000-0000-0000-0000-000000000000\u0027\r\n\t\tELSE [CreatedById]\r\n\t  END AS [CreatedById]\r\n      ,[CreatedOn]\r\n      ,[UpdatedById]\r\n      ,[UpdatedOn]\r\n      ,[ProjectId]\r\n      ,[NoteType]\r\n      ,[Note]\r\n  FROM [dbo].[ProjectNotes]": {
							"targetName": "project_note",
							"mappingType": "existing",
							"attributes": {
								"id": {
									"targetName": "id",
									"mappingType": "existing"
								},
								"createdbyid": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"createdon": {
									"targetName": "created_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updatedbyid": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"updatedon": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"projectid": {
									"targetName": "project_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"notetype": {
									"targetName": "note_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"targetType": "text",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14/\r\n/* query to extract from project.metadata table and into project_note table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027appraisedBy\u0027 THEN 17\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedBy\u0027 THEN 23\r\n\t\tWHEN kv.[key] \u003d \u0027plannedFutureUse\u0027 THEN 24\r\n\t\tWHEN kv.[key] \u003d \u0027preliminaryFormSignedBy\u0027 THEN 25\r\n\t\tWHEN kv.[key] \u003d \u0027purchaser\u0027 THEN 26\r\n\t\tWHEN kv.[key] \u003d \u0027realtor\u0027 THEN 27\r\n\t\tWHEN kv.[key] \u003d \u0027realtorRate\u0027 THEN 28\r\n\tEND AS note_type_id,\r\n    kv.[value] AS \"note\",\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027purchaser\u0027, \u0027appraisedBy\u0027, \u0027finalFormSignedBy\u0027, \u0027plannedFutureUse\u0027, \u0027preliminaryFormSignedBy\u0027, \u0027realtor\u0027 , \u0027realtorRate\u0027 );\r\n": {
							"targetName": "project_note",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"note_type_id": {
									"targetName": "note_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"note": {
									"targetName": "note",
									"targetType": "text",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* query to extract from project.metadata table and into project_timestamp table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027adjustedOn\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027approvedForSplOn\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027clearanceNotificationSentOn\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027disposedOn\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027exemptionApprovedOn\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027finalFormSignedOn\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027interestedReceivedOn\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027offerAcceptedOn\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplApprovedOn\u0027 THEN 9\r\n\t\tWHEN kv.[key] \u003d \u0027removalFromSplRequestOn\u0027 THEN 10\r\n\t\tWHEN kv.[key] \u003d \u0027requestForSplReceivedOn\u0027 THEN 11\r\n\t\tWHEN kv.[key] \u003d \u0027transferredWithinGreOn\u0027 THEN 12\r\n\tEND AS timestamp_type_id,\r\n    CONVERT(datetime, REPLACE(kv.[value], \u0027T\u0027, \u0027 \u0027), 120) AS [date],\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027adjustedOn\u0027, \u0027approvedForSplOn\u0027, \u0027clearanceNotificationSentOn\u0027, \u0027disposedOn\u0027, \u0027exemptionApprovedOn\u0027, \u0027finalFormSignedOn\u0027, \u0027interestedReceivedOn\u0027, \u0027offerAcceptedOn\u0027, \u0027removalFromSplApprovedOn\u0027, \u0027removalFromSplRequestOn\u0027, \u0027requestForSplReceivedOn\u0027, \u0027transferredWithinGreOn\u0027 );\r\n": {
							"targetName": "project_timestamp",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"targetType": "varchar(4000)",
									"mappingType": "skip"
								},
								"timestamp_type_id": {
									"targetName": "timestamp_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"date": {
									"targetName": "\"date\"",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* query to extract from project.metadata table and into project_monetary table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n\tCASE \r\n\t\tWHEN kv.[key] \u003d \u0027gainBeforeSpl\u0027 THEN 1\r\n\t\tWHEN kv.[key] \u003d \u0027interestComponent\u0027 THEN 2\r\n\t\tWHEN kv.[key] \u003d \u0027netProceeds\u0027 THEN 3\r\n\t\tWHEN kv.[key] \u003d \u0027gainLoss\u0027 THEN 4\r\n\t\tWHEN kv.[key] \u003d \u0027ocgFinancialStatement\u0027 THEN 5\r\n\t\tWHEN kv.[key] \u003d \u0027offerAmount\u0027 THEN 6\r\n\t\tWHEN kv.[key] \u003d \u0027programCost\u0027 THEN 7\r\n\t\tWHEN kv.[key] \u003d \u0027realtorCommission\u0027 THEN 8\r\n\t\tWHEN kv.[key] \u003d \u0027salesCost\u0027 THEN 9\r\n\tEND AS monetary_type_id,\r\n    kv.[value] AS \"value\" ,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027gainBeforeSpl\u0027, \u0027interestComponent\u0027, \u0027netProceeds\u0027, \u0027gainLoss\u0027, \u0027ocgFinancialStatement\u0027, \u0027offerAmount\u0027, \u0027programCost\u0027, \u0027realtorCommission\u0027, \u0027salesCost\u0027 );\r\n": {
							"targetName": "project_monetary",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"monetary_type_id": {
									"targetName": "monetary_type_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"value": {
									"targetName": "value",
									"targetType": "money",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"mssql_jtds_legacy-18dce354301-1e68702299e0ca14//* Query to extract relevant data from project.metadata table and into project_task table */\r\nSELECT \r\n    p.id AS project_id,\r\n    kv.[key] AS metadata_key,\r\n    CASE \r\n        WHEN kv.[value] \u003d \u0027true\u0027 THEN 1\r\n        WHEN kv.[value] \u003d \u0027false\u0027 THEN 0\r\n        ELSE NULL\r\n    END AS is_completed,\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN 16\r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN 17\r\n\tEND AS \"task_id\",\r\n    CASE \r\n        WHEN kv.[key] \u003d \u0027priorYearAdjustment\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN JSON_VALUE(p.metadata, \u0027$.priorYearAdjustmentOn\u0027)\r\n                ELSE NULL\r\n            END\r\n        WHEN kv.[key] \u003d \u0027exemptionRequested\u0027 THEN \r\n            CASE \r\n                WHEN kv.[value] \u003d \u0027true\u0027 THEN p.CreatedOn\r\n                ELSE NULL\r\n            END\r\n        ELSE NULL\r\n    END AS completed_on,\r\n    \u002700000000-0000-0000-0000-000000000000\u0027 as \"created_by_id\",\r\n    GETDATE() as \"created_on\",\r\n\tp.UpdatedOn as \"updated_on\",\r\n\tp.UpdatedById as \"updated_by_id\"\r\n\r\nFROM \r\n    Projects p\r\nCROSS APPLY \r\n    OPENJSON(p.metadata) AS kv\r\nWHERE \r\n    kv.[key] IN (\u0027priorYearAdjustment\u0027, \u0027exemptionRequested\u0027)\r\n\torder by kv.[key]": {
							"targetName": "project_task",
							"mappingType": "existing",
							"attributes": {
								"project_id": {
									"targetName": "project_id",
									"mappingType": "existing"
								},
								"metadata_key": {
									"targetName": "metadata_key",
									"mappingType": "skip"
								},
								"is_completed": {
									"targetName": "is_completed",
									"targetType": "bool",
									"mappingType": "existing"
								},
								"task_id": {
									"targetName": "task_id",
									"targetType": "int4",
									"mappingType": "existing"
								},
								"completed_on": {
									"targetName": "completed_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"created_by_id": {
									"targetName": "created_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								},
								"created_on": {
									"targetName": "created_on",
									"mappingType": "existing"
								},
								"updated_on": {
									"targetName": "updated_on",
									"targetType": "timestamp",
									"mappingType": "existing"
								},
								"updated_by_id": {
									"targetName": "updated_by_id",
									"targetType": "uuid",
									"mappingType": "existing"
								}
							}
						},
						"postgres-jdbc-18dd2b052a7-539b625bbf9f91bf/SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));": {
							"targetName": "SELECT setval(\u0027parcel_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM parcel));\r\nSELECT setval(\u0027building_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM building));\r\nSELECT setval(\u0027agency_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM agency));\r\nSELECT setval(\u0027project_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project));\r\nSELECT setval(\u0027project_note_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_note));\r\nSELECT setval(\u0027notification_queue_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM notification_queue));\r\nSELECT setval(\u0027project_property_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_property));\r\nSELECT setval(\u0027project_report_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM project_report));\r\nSELECT setval(\u0027project_status_history_id_seq\u0027, (SELECT COALESCE(MAX(id), 1) FROM  project_status_history));",
							"mappingType": "skip",
							"attributes": {
								"setval": {
									"targetName": "setval",
									"mappingType": "skip"
								}
							}
						}
					}
				},
				"producer": "database_producer",
				"consumer": "database_consumer"
			}
		}
	}
}