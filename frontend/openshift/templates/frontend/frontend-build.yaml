---
kind: Template
apiVersion: v1
metadata:
  name: frontend
  labels:
    app: "${NAME}"
objects:

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}-artifacts"

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}-artifacts-build"
      labels:
        app: "${NAME}"
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers: []
      source:
        type: Git
        git:
          ref: "${GIT_REF}"
          uri: "${GIT_REPO_URL}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: "${BUILDER_IMAGE}:latest"
          incremental: false
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}-artifacts:${OUTPUT_IMAGE_TAG}"
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
        limits:
          cpu: "1"
          memory: 4Gi

  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}-${RUNTIME_IMAGE}-build"
      labels:
        app: "${NAME}"
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers: []
      source:
        dockerfile: |-
          FROM ${NAME}-artifacts:latest
          COPY * /tmp/app/dist/
          CMD  /usr/libexec/s2i/run
        images:
          - from:
              kind: ImageStreamTag
              name: "${NAME}-artifacts:latest"
            paths:
              - destinationDir: tmp
                sourcePath: "/opt/app-root/src/build/."
        type: Dockerfile
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: "${RUNTIME_IMAGE}:latest"
        type: Docker
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:${OUTPUT_IMAGE_TAG}"
      resources: {}

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}-pipeline"
      labels:
        app: "${NAME}"
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers: []
      source:
        type: Git
        git:
          ref: "${GIT_REF}"
          uri: "${GIT_REPO_URL}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
      strategy:
        jenkinsPipelineStrategy:
          jenkinsfilePath: Jenkinsfile
        type: JenkinsPipeline

  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: prod-deploy-pipeline
      labels:
        app: "${NAME}"
    spec:
      runPolicy: Parallel
      completionDeadlineSeconds: 1800
      triggers: []
      source:
        type: Git
        git:
          ref: "${GIT_REF}"
          uri: "${GIT_REPO_URL}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
      strategy:
        jenkinsPipelineStrategy:
          jenkinsfilePath: Jenkinsfile.prod.groovy
        type: JenkinsPipeline

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.
    required: true
    value: frontend
  - name: ENV_NAME
    displayName: Environment Name
    description: Environment name.  For the build environment this will typically be 'tools'
    required: true
    value: jcxjin-tools
  - name: BUILDER_IMAGE
    displayName: Builder Image
    description: The image to use as the Builder Image.
    required: true
    value: yarn-builder
  - name: RUNTIME_IMAGE
    displayName: Runtime Image
    description: The image to use as the applications runtime.
    required: true
    value: nginx-runtime
  - name: GIT_REPO_URL
    displayName: GIT Source Repo URL
    description: A GIT URL to your source code.
    required: true
    value: https://github.com/devinleighsmith/PIMS.git
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    required: true
    value: master
  - name: SOURCE_CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    required: false
    value: "frontend"
  - name: JENKINS_FILEPATH
    displayName: Jenkins File Path
    description: Path, relative to the context directory to find the Jenkinsfile
    required: true
    value: Jenkinsfile
  - name: OUTPUT_IMAGE_TAG
    displayName: Output Image Tag
    description: The tag given to the built image.
    required: true
    value: latest
