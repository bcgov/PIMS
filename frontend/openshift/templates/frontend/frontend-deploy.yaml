---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for a angular on nginx
    tags: react,nginx
  name: frontend
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        name: "${NAME}"
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 1
      selector:
        name: "${NAME}"
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          name: "${NAME}"
          labels:
            name: "${NAME}"
            app: ${APP_NAME}
            role: ${ROLE}
            env: ${TAG_NAME}
            deploymentconfig: "${NAME}"
        spec:
          containers:
            - image: "${NAME}"
              imagePullPolicy: Always
              name: "${NAME}"
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: API_URL
                  value: "${API_URL}"
                - name: API_SERVICE_NAME
                  value: "${API_SERVICE_NAME}"
                - name: API_PATH
                  value: "${API_PATH}"
                - name: RealIpFrom
                  value: "${REAL_IP_FROM}"
              resources:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              livenessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_NAMESPACE}"
              name: "${NAME}:${TAG_NAME}"

  - kind: Service
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        name: "${NAME}"
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: "${NAME}"
      sessionAffinity: None
      type: ClusterIP

  - kind: Route
    apiVersion: v1
    metadata:
      name: "${NAME}"
      labels:
        name: "${NAME}"
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      host: "${APPLICATION_DOMAIN}"
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: "${NAME}"
        weight: 100

parameters:
  - description:
      The name assigned to all of the openshift objects defined in this template.
      It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: frontend
  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: pims
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: frontend
  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: jcxjin-tools
  - description:
      OpenShift cluster private IP range in CIDR notation, used by Nginx
      ngx_http_realip_module.
    displayName: OpenShift Cluster IP Range
    name: REAL_IP_FROM
    required: true
    value: 172.51.0.0/16
  - description:
      The default URL to use when proxying requests to the application's
      API.  The value here will be overridden if a API_SERVICE_NAME is defined.
    displayName: API URL
    name: API_URL
    required: false
    value: ""
  - description:
      The name of the service endpoint for the API.  Used to wire up to an
      API endpoint within the same project; overriding the URL defined by API_URL.
    displayName: API Service Name
    name: API_SERVICE_NAME
    required: false
    value: api
  - description: The root path for the API.  Used in conjunction with API_SERVICE_NAME.
    displayName: API Path
    name: API_PATH
    required: true
    value: "/api"
  - description:
      The exposed hostname that will route to the service, e.g., myappname.pathfinder.gov.bc.ca,
      if left blank a value will be defaulted.
    displayName: Application Hostname
    name: APPLICATION_DOMAIN
    value: pims-dev.pathfinder.gov.bc.ca
  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: dev
