// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppNavBar AppNavBar snapshot test. 1`] = `
<AppNavBar>
  <Navbar
    className="map-nav"
    collapseOnSelect={false}
    expand="lg"
    variant="dark"
  >
    <nav
      className="map-nav navbar navbar-expand-lg navbar-dark"
    >
      <NavbarToggle
        aria-controls="collapse"
        className="navbar-dark mr-auto"
        label="Toggle navigation"
      >
        <button
          aria-controls="collapse"
          aria-label="Toggle navigation"
          className="navbar-dark mr-auto navbar-toggler collapsed"
          onClick={[Function]}
          type="button"
        >
          <span
            className="navbar-toggler-icon"
          />
        </button>
      </NavbarToggle>
      <NavbarCollapse
        className="links mr-auto"
      >
        <Collapse
          appear={false}
          className="links mr-auto"
          dimension="height"
          getDimensionValue={[Function]}
          in={false}
          mountOnEnter={false}
          timeout={300}
          unmountOnExit={false}
        >
          <Transition
            addEndListener={[Function]}
            appear={false}
            aria-expanded={null}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={300}
            unmountOnExit={false}
          >
            <div
              aria-expanded={null}
              className="links mr-auto navbar-collapse collapse"
            >
              <Nav
                fill={false}
                justify={false}
              >
                <ForwardRef
                  as="div"
                  className="navbar-nav"
                  onSelect={[Function]}
                >
                  <div
                    className="navbar-nav"
                    onKeyDown={[Function]}
                  >
                    <AdminDropdown />
                    <PropertyDropdown />
                    <ViewProjects />
                    <ViewProjectApprovalRequests />
                    <DisposeRequest />
                    <DisposeApprove />
                  </div>
                </ForwardRef>
              </Nav>
            </div>
          </Transition>
        </Collapse>
      </NavbarCollapse>
      <Nav
        className="profile align-items-center"
        fill={false}
        justify={false}
      >
        <ForwardRef
          as="div"
          className="profile align-items-center navbar-nav"
          onSelect={[Function]}
        >
          <div
            className="profile align-items-center navbar-nav"
            onKeyDown={[Function]}
          >
            <NavItem
              className="profile-icon pr-0"
            >
              <div
                className="profile-icon pr-0 nav-item"
              >
                <Image
                  fluid={false}
                  rounded={true}
                  roundedCircle={false}
                  src="profile.svg"
                  thumbnail={false}
                >
                  <img
                    className="rounded"
                    src="profile.svg"
                  />
                </Image>
              </div>
            </NavItem>
            <NavDropdown
              className="px-0"
              id="user-dropdown"
              title="default"
            >
              <Dropdown
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "NavItem",
                    "render": [Function],
                  }
                }
                className="px-0"
                navbar={false}
              >
                <ReactOverlaysDropdown
                  itemSelector=".dropdown-item:not(.disabled):not(:disabled)"
                  onToggle={[Function]}
                >
                  <NavItem
                    className="px-0 dropdown"
                    onKeyDown={[Function]}
                  >
                    <div
                      className="px-0 dropdown nav-item"
                      onKeyDown={[Function]}
                    >
                      <DropdownToggle
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "defaultProps": Object {
                              "as": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "SafeAnchor",
                                "render": [Function],
                              },
                              "disabled": false,
                            },
                            "displayName": "NavLink",
                            "render": [Function],
                          }
                        }
                        eventKey={null}
                        id="user-dropdown"
                      >
                        <NavLink
                          aria-expanded={false}
                          aria-haspopup={true}
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "SafeAnchor",
                              "render": [Function],
                            }
                          }
                          className="dropdown-toggle"
                          disabled={false}
                          eventKey={null}
                          id="user-dropdown"
                          onClick={[Function]}
                        >
                          <ForwardRef
                            aria-expanded={false}
                            aria-haspopup={true}
                            as={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "displayName": "SafeAnchor",
                                "render": [Function],
                              }
                            }
                            className="dropdown-toggle nav-link"
                            disabled={false}
                            eventKey={null}
                            id="user-dropdown"
                            onClick={[Function]}
                          >
                            <SafeAnchor
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="dropdown-toggle nav-link"
                              data-rb-event-key={null}
                              disabled={false}
                              onClick={[Function]}
                            >
                              <a
                                aria-expanded={false}
                                aria-haspopup={true}
                                className="dropdown-toggle nav-link"
                                data-rb-event-key={null}
                                href="#"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="button"
                              >
                                default
                              </a>
                            </SafeAnchor>
                          </ForwardRef>
                        </NavLink>
                      </DropdownToggle>
                      <DropdownMenu
                        alignRight={false}
                        flip={true}
                      />
                    </div>
                  </NavItem>
                </ReactOverlaysDropdown>
              </Dropdown>
            </NavDropdown>
          </div>
        </ForwardRef>
      </Nav>
    </nav>
  </Navbar>
</AppNavBar>
`;
