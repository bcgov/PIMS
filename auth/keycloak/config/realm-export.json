{
  "id": "pims",
  "realm": "pims",
  "displayName": "PIMS",
  "displayNameHtml": "Property Management Inventory System",
  "notBefore": 0,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [{
        "id": "fd86ddec-8f9d-4d7b-8c69-956062c5104f",
        "name": "admin-users",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "91fc8939-2dea-44a1-bd17-a1c8f0fe5dc1",
        "name": "property-view",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "223664c7-650c-40ac-8581-f40e10064537",
        "name": "property-edit",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "216b6a37-bc1c-4cf3-9a93-25f96277647e",
        "name": "system-administrator",
        "composite": true,
        "composites": {
          "realm": [
            "property-view",
            "property-edit",
            "sensitive-view",
            "admin-roles",
            "admin-users",
            "property-add"
          ]
        },
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "19a7105b-8916-4b21-9570-92575ec20b6a",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "5fd96f19-abe1-47e7-8a54-0a707bc3e4a4",
        "name": "property-add",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "4dc0f39a-32f0-43a4-9d90-62fd94f20567",
        "name": "sensitive-view",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "321e245b-ee7d-4d7c-83a8-56b5a9d33c2d",
        "name": "admin-roles",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "70c9ca1b-fae5-4677-9da2-4c9241a04c12",
        "name": "agency-administrator",
        "composite": true,
        "composites": {
          "realm": [
            "property-view",
            "property-edit",
            "sensitive-view",
            "admin-roles",
            "admin-users",
            "property-add"
          ]
        },
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      },
      {
        "id": "dcd7d269-d6eb-49a1-a482-fc6d6aa0945f",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "pims",
        "attributes": {}
      }
    ],
    "client": {
      "pims-api": [],
      "pims-test": [{
        "id": "a8d443fd-1636-4e2a-9f79-e55727330b42",
        "name": "uma_protection",
        "composite": false,
        "clientRole": true,
        "containerId": "a6e911dd-4a34-42a1-b237-2ee84b726c46",
        "attributes": {}
      }],
      "realm-management": [{
          "id": "6cd5c33b-af8a-4070-b5c5-75b63e3e4126",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "view-realm",
                "manage-realm",
                "manage-identity-providers",
                "manage-users",
                "view-identity-providers",
                "query-groups",
                "manage-clients",
                "view-users",
                "manage-events",
                "query-clients",
                "view-events",
                "manage-authorization",
                "query-realms",
                "query-users",
                "view-authorization",
                "impersonation",
                "view-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "7b113ed9-3561-4efd-874d-71ec5bd2e567",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "d9df5542-75d5-4fd4-bf63-24ff578e9785",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "1d57b860-a62a-4ac7-8e0b-f17f48d553d5",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "797cb928-b112-4a38-9a00-45455e26c357",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "e698cc15-a0b2-4b7f-ba2f-b9c5f6ffd4c6",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "638a4c43-d72f-4048-abd8-a15437545cb8",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "3bbac1b3-679d-42ac-ad5e-7b52a23152fe",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "56517b8c-5286-4b04-b1bf-9283316e5625",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "8457f9a9-5b0d-47c1-948f-eec6436e4e22",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "e89d0dad-9d3d-43ff-99ac-5df32d4f1239",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "f839a2d2-3937-4631-81ed-e57d0d365c46",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "d552fff4-b74c-43df-8232-5d2405d96967",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "7f2ea381-98b5-4065-9474-a105f49a3e40",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "6690a8d0-b044-46cd-8114-e73944750932",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "2a5e63e7-4279-49eb-8501-7d7b453c2fc4",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "9d5baa40-565b-4501-bd2e-cfdd10917f33",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "1abb0a46-8f06-43b2-878c-2e482481d02b",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        },
        {
          "id": "235e37de-6474-4cb9-8da4-2f36e08a45df",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [{
        "id": "10ee5bd1-b6cb-4aab-a5a5-610c0fb9a8f4",
        "name": "read-token",
        "description": "${role_read-token}",
        "composite": false,
        "clientRole": true,
        "containerId": "a82d99c3-e2b8-46bf-94d7-49213e0a2eac",
        "attributes": {}
      }],
      "account": [{
          "id": "69167ab1-2c90-458c-bf6c-dc0cd8565557",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        },
        {
          "id": "56ae24a4-f28b-450a-a5a9-1d7c6e4414b4",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        },
        {
          "id": "385b1a57-88a6-49fd-b6b7-28369a709ce8",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        },
        {
          "id": "06675cf0-66c0-432a-bb45-76aaca019472",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        },
        {
          "id": "0abde313-b3e7-4e5f-94c6-befa46eb0814",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        },
        {
          "id": "15195b0e-2491-4bfc-ac46-3466df53b280",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
          "attributes": {}
        }
      ],
      "pims-app": [],
      "pims-service-account": []
    }
  },
  "groups": [{
      "id": "6ae8448d-5f0a-4607-803a-df0bc4efdc0f",
      "name": "Agency Administrator",
      "path": "/Agency Administrator",
      "attributes": {},
      "realmRoles": [
        "agency-administrator"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "aad8c03d-892c-4cc3-b992-5b41c4f2392c",
      "name": "Real Estate Manager",
      "path": "/Real Estate Manager",
      "attributes": {},
      "realmRoles": [
        "property-edit",
        "property-view",
        "property-add",
        "sensitive-view"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "bbf27108-a0dc-4782-8025-7af7af711335",
      "name": "System Administrator",
      "path": "/System Administrator",
      "attributes": {},
      "realmRoles": [
        "system-administrator"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "7a7b2549-ae85-4ad6-a8d3-3a5f8d4f9ca5",
      "name": "Real Estate Analyst",
      "path": "/Real Estate Analyst",
      "attributes": {},
      "realmRoles": [
        "property-edit",
        "property-view",
        "property-add",
        "sensitive-view"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "6cdfeb00-6f67-4457-b46a-85bbbc97066c",
      "name": "Executive Director",
      "path": "/Executive Director",
      "attributes": {},
      "realmRoles": [
        "property-edit",
        "property-view",
        "property-add",
        "sensitive-view"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "fbe5fc86-f69e-4610-a746-0113d29e04cd",
      "name": "Assistant Deputy Minister",
      "path": "/Assistant Deputy Minister",
      "attributes": {},
      "realmRoles": [
        "property-edit",
        "property-view",
        "property-add",
        "sensitive-view"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "c9fb2167-d675-455f-96ff-fb0c416246aa",
      "name": "Assistant Deputy Minister Assistant",
      "path": "/Assistant Deputy Minister Assistant",
      "attributes": {},
      "realmRoles": [
        "property-edit",
        "property-view",
        "property-add",
        "sensitive-view"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "users": [{
      "id": "41a46ea3-e815-4272-9a17-693ba2409841",
      "createdTimestamp": 1573673441955,
      "username": "administrator",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Administrator",
      "lastName": "User",
      "email": "administrator@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "lbgx72U68V76p2ouW67chy2svceFeVCnuJ/OZ7w9BfRCv/TPK5cQYOzru5aFCJaiVYhVWUFB7TW6ihuovmSqdw==",
        "salt": "VFdzwNSvOw+oMDSTPy1T5A==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1573673453752,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "system-adminstrator",
        "admin-users",
        "admin-roles",
        "property-view",
        "property-add",
        "property-edit",
        "sensitive-view",
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": [
        "/System Administrator"
      ]
    },
    {
      "id": "2292b7b1-a4fc-4f6c-9645-7e89f409d66c",
      "createdTimestamp": 1573673489829,
      "username": "keanu.reeves",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Keanu",
      "lastName": "Reeves",
      "email": "keanu.reeves@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "NivQJrFwIvezdGWHw3UYTY5WTRsfsLgAAC2sPbv2r3MTz76XyXtEGuCraB6hDc9zquumTMsE+4dMY1kuyfSQiw==",
        "salt": "/eRi6NFk9k9iJBJQFa9UzQ==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1576641159672,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "508bc4d9-5720-4df4-9ad6-51bb516d1ada",
      "createdTimestamp": 1573673489829,
      "username": "audrey.hepburn",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Audrey",
      "lastName": "Hepburn",
      "email": "audrey.hepburn@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "NivQJrFwIvezdGWHw3UYTY5WTRsfsLgAAC2sPbv2r3MTz76XyXtEGuCraB6hDc9zquumTMsE+4dMY1kuyfSQiw==",
        "salt": "/eRi6NFk9k9iJBJQFa9UzQ==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1576641159672,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ff0cdf33-a4be-4da7-adb0-afa2d797a83b",
      "createdTimestamp": 1573673489829,
      "username": "james.dean",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "James",
      "lastName": "Dean",
      "email": "james.dean@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "NivQJrFwIvezdGWHw3UYTY5WTRsfsLgAAC2sPbv2r3MTz76XyXtEGuCraB6hDc9zquumTMsE+4dMY1kuyfSQiw==",
        "salt": "/eRi6NFk9k9iJBJQFa9UzQ==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1576641159672,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d4fc8622-0480-4291-bd50-c62835439925",
      "createdTimestamp": 1573673489829,
      "username": "meg.ryan",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Meg",
      "lastName": "Ryan",
      "email": "meg.ryan@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "NivQJrFwIvezdGWHw3UYTY5WTRsfsLgAAC2sPbv2r3MTz76XyXtEGuCraB6hDc9zquumTMsE+4dMY1kuyfSQiw==",
        "salt": "/eRi6NFk9k9iJBJQFa9UzQ==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1576641159672,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "22a636b0-edca-4bc0-b7da-d7091cdec275",
      "createdTimestamp": 1573673489829,
      "username": "julie.andrews",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Julie",
      "lastName": "Andrews",
      "email": "julie.andrews@email.com",
      "credentials": [{
        "type": "password",
        "hashedSaltedValue": "NivQJrFwIvezdGWHw3UYTY5WTRsfsLgAAC2sPbv2r3MTz76XyXtEGuCraB6hDc9zquumTMsE+4dMY1kuyfSQiw==",
        "salt": "/eRi6NFk9k9iJBJQFa9UzQ==",
        "hashIterations": 27500,
        "counter": 0,
        "algorithm": "pbkdf2-sha256",
        "digits": 0,
        "period": 0,
        "createdDate": 1576641159672,
        "config": {}
      }],
      "disableableCredentialTypes": ["password"],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "realm-management": [],
        "account": ["view-profile", "manage-account"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [{
    "clientScope": "offline_access",
    "roles": [
      "offline_access"
    ]
  }],
  "clientScopeMappings": {
    "account": [{
      "client": "account-console",
      "roles": [
        "manage-account"
      ]
    }]
  },
  "clients": [{
      "id": "d7bbb281-4a9d-4e98-8240-75c6af9979d4",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/pims/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "fbbb4e1a-1ee5-4b68-896b-3cb4f0b8cfcf",
      "defaultRoles": [
        "view-profile",
        "manage-account"
      ],
      "redirectUris": [
        "/realms/pims/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e0e48d1c-38d4-4f48-8475-75d9913d5af5",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/pims/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "52d7c8dd-dba3-4664-86fe-067117c16e9f",
      "redirectUris": [
        "/realms/pims/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [{
        "id": "bdfdfcad-8b73-4c73-ae8f-9b8cc2502ac5",
        "name": "audience resolve",
        "protocol": "openid-connect",
        "protocolMapper": "oidc-audience-resolve-mapper",
        "consentRequired": false,
        "config": {}
      }],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3fc6709f-e5d0-4b78-a4e3-2c7443cccb3a",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "71ee5879-2538-4fc8-9246-d3a945e44436",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a82d99c3-e2b8-46bf-94d7-49213e0a2eac",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "ace1ca05-c3ae-4e9a-9b56-15f92b3be34e",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f9305753-6adb-4f4e-8f89-075eaac30d60",
      "clientId": "pims-api",
      "name": "PIMS API",
      "description": "Property Inventory Management System API",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "6d182cfd-c085-4c2b-a4f7-65ac245cf68a",
      "redirectUris": [
        "http://localhost:5000/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "3600",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7fc39596-ee23-4c81-8c19-bfa927b43593",
      "clientId": "pims-app",
      "name": "PIMS APP",
      "description": "Property Inventory Management System Frontend Application",
      "rootUrl": "http://localhost:3000",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "6d182cfd-c085-4c2b-a4f7-65ac245cf68a",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "3600",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "737b4e24-9d20-4d6d-bc4f-cef73675109b",
          "name": "Groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "Groups",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5218e515-1fca-45d7-a021-f6d51214653f",
      "clientId": "pims-service-account",
      "name": "PIMS Keycloak Admin",
      "description": "Property Inventory Management System API",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "a1866892-c340-44d0-84a7-67dc204ef0c3",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "300",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [{
          "id": "f9dee8c0-583a-46e1-b84b-69bee792ba6c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ec3c925e-966b-41f4-93e2-9f130a8c0d53",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0cf084d4-55a4-40b1-87ad-a9e39f3f4b50",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a6e911dd-4a34-42a1-b237-2ee84b726c46",
      "clientId": "pims-test",
      "name": "PIMS API Testing Client",
      "description": "Property Inventory Management System API Testing Client",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "http://localhost:3000",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "9e862dd2-94a9-4fd4-802e-3077d073b781",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "3600",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [{
          "id": "dfb33eb5-5a55-4ba9-add3-d292f06e9189",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2cdd3b95-f848-483f-ae56-106e599374aa",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "82caeb2b-64b0-425a-a564-9df6ea36d43c",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [{
          "name": "Default Resource",
          "type": "urn:pims-test:resources:default",
          "ownerManagedAccess": false,
          "attributes": {},
          "_id": "9bd14dbf-44d4-4170-85f3-7f84d483d4bf",
          "uris": [
            "/*"
          ]
        }],
        "policies": [{
            "id": "f0ac4a44-128f-43c8-a62e-6c752aefad81",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "bf9fffe3-2195-419a-b4b1-36f6bc63f138",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:pims-test:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "0c1229b0-ef82-4ed4-b3cc-66d3f48ef143",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "6e399317-e706-40b0-a9e9-5d6447617bf5",
      "defaultRoles": [
        "manage-users",
        "view-users"
      ],
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ccfff46f-5372-4ea6-91da-edd9e9799836",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/pims/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "bf6bf759-ceb5-4633-b2b9-e94b50d05a77",
      "redirectUris": [
        "/admin/pims/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [{
        "id": "82a819bb-10b3-4ce6-a75d-ed17e2323d49",
        "name": "locale",
        "protocol": "openid-connect",
        "protocolMapper": "oidc-usermodel-attribute-mapper",
        "consentRequired": false,
        "config": {
          "userinfo.token.claim": "true",
          "user.attribute": "locale",
          "id.token.claim": "true",
          "access.token.claim": "true",
          "claim.name": "locale",
          "jsonType.label": "String"
        }
      }],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [{
      "id": "02e57219-85d0-4f5f-999d-9b1858faf538",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "c5e795fc-f9a2-43d9-a964-7fa66436b275",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [{
        "id": "6247a5b3-6a12-4531-a8dc-d1d03d6c854e",
        "name": "role list",
        "protocol": "saml",
        "protocolMapper": "saml-role-list-mapper",
        "consentRequired": false,
        "config": {
          "single": "false",
          "attribute.nameformat": "Basic",
          "attribute.name": "Role"
        }
      }]
    },
    {
      "id": "26639a0b-6db0-4afe-922b-45b4b8f161fc",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [{
          "id": "cd24814c-e55b-4e2a-8f1f-ee79d718c15c",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "161863ff-82a1-4708-81cd-f3be33c297a2",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "94caf704-42cd-4732-b63a-907b6c2668e4",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e91da85f-8a79-4c28-9a12-6cd50a62d131",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "188b3d38-9590-45af-a2b3-c4699d7d5259",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dfb853f6-238a-414f-800e-f1942fe578d6",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "06df2fc7-e402-4e53-ba33-5df06122c126",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3837db6c-439c-4473-abc1-22ee31bde1c3",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "459a9c39-e5fd-4359-abac-06c4c698af54",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c4d4f689-3164-4a70-9ade-4d3a91706fe2",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8a6cc845-769b-406f-965e-a8c22bf79ee9",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4541e55a-cb53-4da0-83a1-9a569628c540",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "981a0439-b8ed-4b0e-80c1-13f265bfd2a5",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "104ee485-9de9-4cbd-a9f1-5fe27aacd1ae",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6fc9c3d0-9414-4ff2-ba65-a52255533e83",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [{
          "id": "1292c001-65d0-4039-aaec-0f4f2393a9a9",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6d5a37b-cac2-44e0-939e-16728818bf77",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "b71d2764-22c2-44f1-a92a-fa3ed0b8d4fe",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [{
        "id": "6b774049-3489-4485-8bd4-e1e862a5197d",
        "name": "address",
        "protocol": "openid-connect",
        "protocolMapper": "oidc-address-mapper",
        "consentRequired": false,
        "config": {
          "user.attribute.formatted": "formatted",
          "user.attribute.country": "country",
          "user.attribute.postal_code": "postal_code",
          "userinfo.token.claim": "true",
          "user.attribute.street": "street",
          "id.token.claim": "true",
          "user.attribute.region": "region",
          "access.token.claim": "true",
          "user.attribute.locality": "locality"
        }
      }]
    },
    {
      "id": "8454c0c3-3eab-41ef-9823-cbd920d1957f",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [{
          "id": "0f898f0c-ace9-4b1c-876b-4d1ff823c70f",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "889500da-d475-4874-8863-5f43d289c6b3",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "a8ce2fb3-f6a2-4b08-841b-420e094b4164",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [{
          "id": "3b602525-fd61-4876-9d24-574f47d00159",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "d5a3d351-a633-47c6-961b-c1719962a481",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "6e9faf90-7141-4f91-9484-02865e3828eb",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "42681000-e90f-429f-9d11-389d0f946447",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [{
        "id": "2092daf7-bb92-4b14-8ef3-e3f106c0ca60",
        "name": "allowed web origins",
        "protocol": "openid-connect",
        "protocolMapper": "oidc-allowed-origins-mapper",
        "consentRequired": false,
        "config": {}
      }]
    },
    {
      "id": "481481a7-a3cf-4d04-a615-8d950066524f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [{
          "id": "3e7d5118-2e8f-4ab9-8e39-3f7b7e783f0b",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "463315ae-1ac2-4fe7-913f-337d4dac95d3",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [{
    "alias": "github",
    "internalId": "83fa4a4b-7801-4c1e-9f5c-7fc4ef9770eb",
    "providerId": "github",
    "enabled": false,
    "updateProfileFirstLoginMode": "on",
    "trustEmail": false,
    "storeToken": false,
    "addReadTokenRoleOnCreate": false,
    "authenticateByDefault": false,
    "linkOnly": false,
    "firstBrokerLoginFlowAlias": "first broker login",
    "config": {
      "hideOnLoginPage": "",
      "acceptsPromptNoneForwardFromClient": "",
      "clientId": "7b4367765a76dbb2f91a",
      "disableUserInfo": "",
      "clientSecret": "761be65303305032765f1f56373ec6324c87d76c",
      "useJwksUrl": "true"
    }
  }],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [{
        "id": "455d5da4-e143-485c-8475-a5a94d47cc7a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "91b8fb14-735a-4158-b831-d309b430e97a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "6a3ad32c-0c6f-487c-adb0-a54cb8122f64",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7e5cc3a0-038c-42d8-8434-df0f8d810007",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "d1c82da8-788c-42f0-a3ff-a6cb172ae2df",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "fb576093-ed7e-41ed-a450-68a9a480f2c1",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "615ecf9e-aa1c-40c4-810f-c6b142947cf5",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d9a59076-11d8-42d4-9f0d-73ce05d831bf",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [{
        "id": "daa41a06-062c-4bf6-8fbb-a344f0378bc5",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f8d4028c-bb41-47d0-9fec-24ce2fcbe9ef",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "9b2e6e3d-c5d7-4e00-bec0-e70b7ce088df",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [{
      "id": "1cc4e9f2-51ff-4abd-a465-0880d6d34413",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Handle Existing Account - Alternatives - 0",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4527e8c4-e801-469d-9c22-dfdd7d426cf2",
      "alias": "Handle Existing Account - Alternatives - 0",
      "description": "Subflow of Handle Existing Account with alternative executions",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "49c05341-f922-4ec2-a294-1dd2ab094974",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "754a2fca-4c28-4090-8bd1-01b398abad66",
      "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b84129e9-2d51-4a52-b58d-2cf4e31691b1",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "0addbf54-b5fa-42bd-a4c8-3d9387d3a73f",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e0cf9ece-8568-446a-92ac-6f669e356d82",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5e65ec08-80c9-4c95-8b80-51435d91e2ab",
      "alias": "direct grant - direct-grant-validate-otp - Conditional",
      "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "58252c25-7c61-4d12-adfa-cb511cb44e3b",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
        "authenticator": "docker-http-basic-authenticator",
        "requirement": "REQUIRED",
        "priority": 10,
        "userSetupAllowed": false,
        "autheticatorFlow": false
      }]
    },
    {
      "id": "c31903dd-c870-41cd-ab75-02545b6a03b2",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "first broker login - Alternatives - 0",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f80cf436-8a54-4bb8-bc91-2d9138e5459f",
      "alias": "first broker login - Alternatives - 0",
      "description": "Subflow of first broker login with alternative executions",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2823e61f-e437-468d-9080-0717d37625d9",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "forms - auth-otp-form - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "8f65fd96-699c-4002-9075-694d0a8cc30d",
      "alias": "forms - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "d2b13408-2dcd-4187-a298-e7a38519af19",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "no-cookie-redirect",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "2cbe761e-fd0f-41d0-9e81-260d2097cdea",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
        "authenticator": "registration-page-form",
        "requirement": "REQUIRED",
        "priority": 10,
        "flowAlias": "registration form",
        "userSetupAllowed": false,
        "autheticatorFlow": true
      }]
    },
    {
      "id": "ec0fbb29-5edc-4f94-bff4-64230d75b340",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "cf2a8606-878f-4963-9761-bd10ef6911c6",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "reset credentials - reset-otp - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "18d03153-9b1b-4cd2-88ec-60f3853e9d70",
      "alias": "reset credentials - reset-otp - Conditional",
      "description": "Flow to determine if the reset-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [{
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "6bcea4db-167c-4cc6-8389-633897263247",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [{
        "authenticator": "http-basic-authenticator",
        "requirement": "REQUIRED",
        "priority": 10,
        "userSetupAllowed": false,
        "autheticatorFlow": false
      }]
    }
  ],
  "authenticatorConfig": [{
      "id": "79f59655-309c-46e8-895d-f5c75fd91c9d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "6b0c0730-9adf-439a-b378-eb3b6cd0e74c",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "on"
      }
    }
  ],
  "requiredActions": [{
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "displayName": "PIMS",
    "_browser_header.xRobotsTag": "none",
    "webAuthnPolicyAttestationConveyancePreferencePasswordless": "not specified",
    "webAuthnPolicyRequireResidentKeyPasswordless": "not specified",
    "webAuthnPolicySignatureAlgorithmsPasswordless": "ES256",
    "displayNameHtml": "Property Management Inventory System",
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicyAvoidSameAuthenticatorRegisterPasswordless": "false",
    "failureFactor": "30",
    "webAuthnPolicyAuthenticatorAttachmentPasswordless": "not specified",
    "actionTokenGeneratedByUserLifespan": "300",
    "maxDeltaTimeSeconds": "43200",
    "webAuthnPolicySignatureAlgorithms": "ES256",
    "webAuthnPolicyRpEntityNamePasswordless": "keycloak",
    "frontendUrl": "",
    "offlineSessionMaxLifespan": "5184000",
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "bruteForceProtected": "false",
    "webAuthnPolicyRpIdPasswordless": "",
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.xXSSProtection": "1; mode=block",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "webAuthnPolicyCreateTimeout": "0",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "maxFailureWaitSeconds": "900",
    "minimumQuickLoginWaitSeconds": "60",
    "webAuthnPolicyCreateTimeoutPasswordless": "0",
    "webAuthnPolicyAvoidSameAuthenticatorRegister": "false",
    "webAuthnPolicyUserVerificationRequirementPasswordless": "not specified",
    "_browser_header.xContentTypeOptions": "nosniff",
    "actionTokenGeneratedByAdminLifespan": "43200",
    "waitIncrementSeconds": "60",
    "offlineSessionMaxLifespanEnabled": "false"
  },
  "keycloakVersion": "9.0.0",
  "userManagedAccessAllowed": false
}
