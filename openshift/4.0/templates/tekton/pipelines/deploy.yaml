kind: Template
apiVersion: v1
metadata:
  name: oc-push-to-prod
  annotations:
    openshift.io/display-name: OC Mono-repo Pipeline
    description:
      Releases approved images to specified environment.
    tags: oc,pipeline

parameters:
  - name: SOLUTION_NAME
    displayName: Solution Group Name
    description: The name of the solution (e.g pims).
    required: true
    value: pims

  - name: API_NAME
    displayName: API Application Name
    description: The name of the application.
    required: true
    value: api
  - name: APP_NAME
    displayName: Application Name
    description: The name of the application.
    required: true
    value: app
  - name: MIGRATION_NAME
    displayName: Database Migration Name
    description: The name of the database migration.
    required: true
    value: migrations
  - name: DB_NAME
    displayName: Database Name
    description: The name of the database deployment config.
    required: true
    value: database
  - name: NGINX_NAME
    displayName: Nginx Name
    description: The name of the nginx service.
    required: true
    value: nginx
  - name: BACKUP_NAME
    displayName: Database Backup Name
    description: The name of the database backup deployment config.
    required: true
    value: backup

  - name: DEPLOY_TO
    displayName: Deploy To
    description: Identify the environment to deploy the solution to [dev,test,prod,tools].
    required: true
    value: prod

objects:
  - apiVersion: tekton.dev/v1alpha1
    kind: Pipeline
    metadata:
      name: deploy
      annotations:
        description: >-
          Deploy the images specified by the tag to the specified environment.
        tags: oc,deploy
    spec:
      params:
        - name: PROJECT_SHORTNAME
          description: >-
            The project namespace shortname.
            The part before the "-" (i.e. 354028-dev = 354028).
          type: string
          default: '354028'

        - name: IMAGE_TAG
          description: >-
            The tag that identifies the images that will be deployed.
          type: string

        - name: DEPLOY_TO
          description: >-
            Identify the environment to deploy the solution to [dev,test,prod,tools].
          type: string
          default: ${DEPLOY_TO}

      tasks:
        - name: maintenance-on
          taskRef:
            name: oc-update-route
            kind: Task
          params:
            - name: PROJECT_NAMESPACE
              value: $(params.PROJECT_SHORTNAME)-$(params.DEPLOY_TO)
            - name: ROUTE
              value: ${SOLUTION_NAME}-${APP_NAME}
            - name: SERVICE
              value: ${SOLUTION_NAME}-${NGINX_NAME}

        - name: database-backup
          taskRef:
            name: oc-backup
            kind: Task
          params:
            - name: PROJECT_NAMESPACE
              value: $(params.PROJECT_SHORTNAME)-$(params.DEPLOY_TO)
            - name: DEPLOYMENT_CONFIG
              value: ${SOLUTION_NAME}-${BACKUP_NAME}

        - name: run-db-migration
          runAfter:
            - maintenance-on
            - database-backup
          taskRef:
            name: db-migration
            kind: Task
          params:
            - name: MIGRATION_IMAGE
              value: ${SOLUTION_NAME}-${MIGRATION_NAME}
            - name: DB_APP_NAME
              value: ${SOLUTION_NAME}-${DB_NAME}
            - name: IMAGE_TAG
              value: $(params.IMAGE_TAG)
            - name: DEPLOY_TO
              value: $(params.DEPLOY_TO)

        - name: deploy-api
          runAfter:
            - maintenance-on
            - run-db-migration
          taskRef:
            name: oc-deploy-with-tag
            kind: Task
          params:
            - name: IMAGE_NAME
              value: ${SOLUTION_NAME}-${API_NAME}
            - name: IMAGE_TAG
              value: $(params.IMAGE_TAG)
            - name: ENV
              value: $(params.DEPLOY_TO)

        - name: deploy-app
          runAfter:
            - maintenance-on
            - deploy-api
          taskRef:
            name: oc-deploy-with-tag
            kind: Task
          params:
            - name: IMAGE_NAME
              value: ${SOLUTION_NAME}-${APP_NAME}
            - name: IMAGE_TAG
              value: $(params.IMAGE_TAG)
            - name: ENV
              value: $(params.DEPLOY_TO)

        - name: maintenance-off
          runAfter:
            - deploy-app
          taskRef:
            name: oc-update-route
            kind: Task
          params:
            - name: PROJECT_NAMESPACE
              value: $(params.PROJECT_SHORTNAME)-$(params.DEPLOY_TO)
            - name: ROUTE
              value: ${SOLUTION_NAME}-${APP_NAME}
            - name: SERVICE
              value: ${SOLUTION_NAME}-${APP_NAME}
