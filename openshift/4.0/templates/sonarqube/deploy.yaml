apiVersion: v1
kind: Template
message: "Login to SonarQube with the default admin user: admin/admin"
metadata:
  annotations:
    description: The SonarQube OpenShift template
    tags: "instant-app,sonarqube"
  name: sonarqube
parameters:
  - displayName: App name
    name: NAME
    required: true
    value: "sonarqube"
  - displayName: Source role
    name: SOURCE_ROLE
    required: true
    value: "server"
  - displayName: Destination role
    name: DESTINATION_ROLE
    required: true
    value: "db"
  - displayName: Environment name
    name: ENV_NAME
    required: true
    value: "tools"
  - displayName: SonarQube version
    name: SONARQUBE_VERSION
    required: true
    value: "lts-community"

objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: sonarqube
      name: sonarqube
    spec:
      tags:
        - annotations:
            description: The SonarQube Docker image
            tags: sonarqube
          from:
            kind: DockerImage
            name: "sonarqube:${SONARQUBE_VERSION}"
          importPolicy: {}
          name: "${SONARQUBE_VERSION}"
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: sonarqube
        deploymentconfig: sonarqube
        role: ${SOURCE_ROLE}
        env: ${ENV_NAME}
      name: sonarqube
    spec:
      replicas: 1
      selector:
        app: sonarqube
        deploymentconfig: sonarqube
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Recreate
        recreateParams:
          timeoutSeconds: 9600
      template:
        metadata:
          annotations:
            openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
          creationTimestamp: null
          labels:
            app: sonarqube
            deploymentconfig: sonarqube
        spec:
          containers:
            - env:
                - name: SONARQUBE_JDBC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: postgresql-sonar-password
                - name: SONARQUBE_JDBC_URL
                  value: "jdbc:postgresql://postgresql-sonarqube/sonar"
                - name: SONARQUBE_JDBC_USERNAME
                  value: sonar
                - name: SONAR_FORCEAUTHENTICATION
                  value: "false"
              volumeMounts:
                - mountPath: /opt/sonarqube/data
                  name: sonar-data
                  subPath: data
                - mountPath: /opt/sonarqube/logs
                  name: sonar-logs
                  subPath: logs
                - mountPath: /opt/sonarqube/temp
                  name: sonar-temp
                  subPath: temp
                - mountPath: /opt/sonarqube/extensions/plugins
                  name: sonar-plugins
                  subPath: plugins
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 9000
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 5
              name: sonarqube
              ports:
                - containerPort: 9000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 9000
                initialDelaySeconds: 60
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: 1
                  memory: 4Gi
                requests:
                  cpu: 500m
                  memory: 2Gi
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: sonar-data
            - emptyDir: {}
              name: sonar-logs
            - emptyDir: {}
              name: sonar-temp
            - name: sonar-plugins
              persistentVolumeClaim:
                claimName: sonarqube-data
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - sonarqube
            from:
              kind: ImageStreamTag
              name: "sonarqube:${SONARQUBE_VERSION}"
          type: ImageChange
