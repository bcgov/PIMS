apiVersion: v1
kind: Template
metadata:
  name: kibana-deploy
  annotations:
    openshift.io/display-name: PIMS Kibana
    description: Deployment template for Kibana
    tags: kibana,logging
objects:
  # Kibana configuration settings.
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}-config
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-config
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    data:
      kibana.yml: |-
        server.host: "0"
        server.name: ${APP_NAME}

        elasticsearch.hosts: ["http://${ELASTICSEARCH_DOMAIN}:9200"]
        elasticsearch.username: elastic
        elasticsearch.password: ${ELASTIC_PASSWORD}

  # Expose ports on pod.
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-service
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-service
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      type: NodePort
      ports:
        - port: 5601
          name: webinterface
      selector:
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}

  # Provide dns access to pod.
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-route
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-route
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      host: ${KIBANA_DOMAIN}
      to:
        name: ${APP_NAME}-service
        kind: Service
        weight: 100
      tls:
        termination: edge

  # How the pod will be deployed.
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
      template:
        metadata:
          labels:
            name: ${APP_NAME}
            app: ${APP_NAME}
            role: logging
            env: ${ENV_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: docker.elastic.co/kibana/kibana:7.3.0
              env:
                - name: ELASTICSEARCH_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: elasticsearch-secret
                      key: ELASTIC_PASSWORD
              ports:
                - containerPort: 5601
                  name: webinterface
              volumeMounts:
                - name: config
                  mountPath: /usr/share/kibana/config/kibana.yml
                  readOnly: true
                  subPath: kibana.yml
          volumes:
            - name: config
              configMap:
                name: ${APP_NAME}-config
parameters:
  - name: APP_NAME
    displayName: "App Name"
    description: "The name of the application (grouped)."
    required: true
    value: "kibana"
  - name: ROLE_NAME
    displayName: "Component Role Name"
    description: "The name of the application component role (e.g web, api, database)."
    required: true
    value: "logging"
  - name: ENV_NAME
    displayName: "Environment name"
    description: "The name for this environment [dev, test, prod, tools]"
    required: true
    value: "tools"
  - name: PROJECT_NAMESPACE
    displayName: "OpenShift Project Namespace"
    description: "The namespace of the OpenShift project containing the application."
    required: true
    value: "354028"

  - name: KIBANA_DOMAIN
    displayName: "Kibana Domain Name"
    description: "Kibana domain name to access pod"
    required: true
    value: "pims-kibana.apps.silver.devops.gov.bc.ca"

  - name: ELASTICSEARCH_DOMAIN
    displayName: "Elasticsearch Service Domain Name"
    description: "Elasticsearch service Domain Name"
    required: true
    value: "pims-elastic.apps.silver.devops.gov.bc.ca"
  - name: ELASTIC_PASSWORD
    displayName: "Elasticsearch Password"
    description: "Elastic search bootstrap password"
    required: true
    # Regrettably this appears to be required as I am not certain how to extract the password from a secret for the yaml configuration.
