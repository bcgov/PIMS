apiVersion: v1
kind: Template
metadata:
  name: kibana-deploy
  annotations:
    openshift.io/display-name: PIMS Kibana
    description: Deployment template for Kibana
    tags: "kibana,logging"
parameters:
  - name: APP_NAME
    displayName: "App Name"
    description: "The name of the application (grouped)."
    required: true
    value: "kibana"
  - name: ROLE_NAME
    displayName: "Component Role Name"
    description: "The name of the application component role (e.g web, api, database)."
    required: true
    value: "logging"
  - name: ENV_NAME
    displayName: "Environment name"
    description: "The name for this environment [dev, test, prod, tools]"
    required: true
    value: "tools"
  - name: PROJECT_NAMESPACE
    displayName: "OpenShift Project Namespace"
    description: "The namespace of the OpenShift project containing the application."
    required: true
    value: "354028"

  - name: KIBANA_DOMAIN
    displayName: "Kibana Domain Name"
    description: "Kibana domain name to access pod"
    required: true
    value: "pims-kibana.apps.silver.devops.gov.bc.ca"

  - name: ELASTICSEARCH_NAME
    displayName: "Elasticsearch Service Name"
    description: "The Elasticsearch service name specified in the deployment configuration."
    required: true
    value: "elasticsearch"
objects:
  # Allow kibana to communicate with elasticsearch
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: pod-to-pod-permit-${APP_NAME}-${ELASTICSEARCH_NAME}
    spec:
      description: Allow pod(s) to communicate to other pod(s).
      source:
        - - app=${APP_NAME}
          - role=${ROLE_NAME}
          - env=${ENV_NAME}
      destination:
        - - app=${ELASTICSEARCH_NAME}
          - role=${ROLE_NAME}
          - env=${ENV_NAME}

  # Kibana configuration settings.
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    data:
      kibana.yml: |-
        server.host: "0"
        server.name: ${APP_NAME}

        elasticsearch.hosts: [http://${ELASTICSEARCH_NAME}.354028-tools.svc.cluster.local:9200]
        elasticsearch.username: elastic
        elasticsearch.password: ${ELASTICSEARCH_PASSWORD}

  # Expose ports on pod.
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      type: NodePort
      ports:
        - port: 5601
          name: webinterface
      selector:
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}

  # Provide dns access to pod.
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      host: ${KIBANA_DOMAIN}
      to:
        name: ${APP_NAME}
        kind: Service
        weight: 100
      tls:
        termination: edge

  # How the pod will be deployed.
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        role: logging
        env: ${ENV_NAME}
      template:
        metadata:
          labels:
            name: ${APP_NAME}
            app: ${APP_NAME}
            role: logging
            env: ${ENV_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: docker.elastic.co/kibana/kibana:7.3.0
              env:
                - name: ELASTICSEARCH_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: elasticsearch
                      key: ELASTIC_PASSWORD
              ports:
                - containerPort: 5601
                  name: webinterface
              volumeMounts:
                - name: config
                  mountPath: /usr/share/kibana/config/kibana.yml
                  readOnly: true
                  subPath: kibana.yml
          volumes:
            - name: config
              configMap:
                name: ${APP_NAME}
