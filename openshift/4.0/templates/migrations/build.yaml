kind: Template
apiVersion: v1
metadata:
  name: pims-migrations
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all application components.
    required: true
    value: pims
  - name: ROLE
    displayName: Role
    description: The role of this component within openshift.
    required: true
    value: migrations
  - name: ENV_NAME
    displayName: Env Name
    description: The environment that the migrations should run in
    required: true
    value: prod
  - name: DESTINATION_ROLE
    displayName: Destination role
    description: The role of the component that must communicate with this component.
    required: true
    value: database
  - name: GIT_URL
    displayName: Git Repo URL
    description:
      The URL to your GIT repo, don't use the this default unless your just
      experimenting.
    required: true
    value: https://github.com/bcgov/PIMS.git
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    required: true
    value: dev
  - name: SOURCE_CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    required: true
    value: backend
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 1000m
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use.
    required: true
    value: 2Gi
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${NAME}-${ROLE}
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-${ROLE}-${GIT_REF}
    spec:
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: "${GIT_URL}"
          ref: "${GIT_REF}"
        contextDir: "${SOURCE_CONTEXT_DIR}"
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: Dockerfile.migrations
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}-${ROLE}:${GIT_REF}"
      resources:
        limits:
          cpu: ${CPU_LIMIT}
          memory: ${MEMORY_LIMIT}
      postCommit: {}
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: pod-to-pod-permit-${NAME}-${ROLE}-${DESTINATION_ROLE}
    spec:
      description: Allow pod(s) to communicate to other pod(s).
      source:
        - - app=${NAME}
          - role=${ROLE}
          - env=${ENV_NAME}
      destination:
        - - app=${NAME}
          - role=${DESTINATION_ROLE}
          - env=${ENV_NAME}
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: internal-ingress-${NAME}-${ROLE}
    spec:
      description: Allow a pod to open connections to the Internet.
      source:
        - - app=${NAME}
          - role=${ROLE}
          - env=${ENV_NAME}
      destination:
        - - ext:network=any
