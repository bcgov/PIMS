---
kind: Template
apiVersion: v1
metadata:
  name: "mssql-backup-build"
parameters:
  - name: NAME
    displayName: Backup Image Name
    description: A unique name to identify the backup image
    required: true
    value: mssql
  - name: ROLE_NAME
    displayName: Component Name
    description: The name of the application role (e.g app, api, database, backup).
    required: true
    value: "backup"
  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the deployed application.
    required: true
    value: "354028"
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod, tools]
    required: true
    value: "tools"

  - name: GIT_URL
    displayName: Git Repo URL
    description: The URL to your GIT repo.
    required: true
    value: https://github.com/BCDevOps/backup-container.git
  - name: GIT_REF
    displayName: Git Reference
    description: The git reference or branch.
    required: true
    value: master
  - name: CONTEXT_DIR
    displayName: Source Context Directory
    description: The source context directory.
    required: false
    value: "/docker"

  - name: DOCKER_FILE_PATH
    displayName: Docker File
    description:
      The path and file of the docker file defining the build.  Choose either
      'Dockerfile' for Postgres builds or 'Dockerfile_Mongo' for MongoDB builds or 'Dockerfile_MSSQL'
      for MSSQL builds.
    required: false
    value: Dockerfile_MSSQL

  - name: OUTPUT_IMAGE_TAG
    displayName: Output Image Tag
    description: The tag given to the built image.
    required: true
    value: latest
objects:
  # Destination of built image.
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: ${ROLE_NAME}-${NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${ROLE_NAME}-${NAME}
        app: ${NAME}
        role: ${ROLE_NAME}
        env: ${ENV_NAME}

  # How to build the image.
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${ROLE_NAME}-${NAME}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${ROLE_NAME}-${NAME}
        app: ${NAME}
        role: ${ROLE_NAME}
        env: ${ENV_NAME}
    spec:
      triggers:
        - type: ImageChange
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Git
        git:
          uri: ${GIT_URL}
          ref: ${GIT_REF}
        contextDir: ${CONTEXT_DIR}
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: ${DOCKER_FILE_PATH}
      output:
        to:
          kind: ImageStreamTag
          name: ${ROLE_NAME}-${NAME}:${OUTPUT_IMAGE_TAG}
