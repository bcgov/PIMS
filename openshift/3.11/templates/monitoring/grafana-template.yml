kind: Template
apiVersion: v1
metadata:
  name: pims-grafana-deploy
  annotations:
    openshift.io/display-name: PIMS Grafana
    description: Deployment template for Grafana
    tags: pims-monitoring
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: grafana-dashboards-config
      namespace: ${PROJECT_NAME}
      labels:
        name: grafana
    data:
      dashboards-provider.yaml: |-
        apiVersion: 1
        providers:
          #  an unique provider name
          - name: 'pims-dashboards'
            #  org id. will default to orgId 1 if not specified
            orgId: 1
            #  name of the dashboard folder. Required
            folder: ''
            #  folder UID. will be automatically generated if not specified
            folderUid: ''
            #  provider type. Required
            type: file
            #  disable dashboard deletion
            disableDeletion: false
            #  enable dashboard editing
            editable: true
            #  how often Grafana will scan for changed dashboards
            updateIntervalSeconds: 10
            #  allow updating provisioned dashboards from the UI
            allowUiUpdates: true
            options:
              #  path to dashboard files on disk. Required
              path: /dashboards
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ${GRAFANA_SERVICE_ACCOUNT_NAME}
      labels:
        name: ${GRAFANA_SERVICE_ACCOUNT_NAME}
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"grafana"}}'
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        name: grafana
      name: grafana
      namespace: ${PROJECT_NAME}
    spec:
      host: ${DOMAIN}
      to:
        name: grafana
        kind: Service
        weight: 100
      tls:
        termination: Reencrypt
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: pims-monitoring-tools-grafana-datasource-config
      namespace: ${PROJECT_NAME}
      annotations:
        description: Grafana datasource configuration
      labels:
        name: pims-monitoring-tools-grafana-datasource-config
        app: pims
        component: monitoring
        env: tools
        role: prometheus
    type: Opaque
    data:
      datasources.yml: |-
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: ${PROMETHEUS_DATASOURCE_URL}
  - apiVersion: v1
    kind: Service
    metadata:
      name: grafana
      namespace: ${PROJECT_NAME}
      labels:
        metrics-infra: grafana
        name: grafana
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: grafana-tls
    spec:
      ports:
        - name: grafana
          port: 443
          targetPort: 8443
      selector:
        app: pims-grafana-tools
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: pims-grafana-tools
      namespace: ${PROJECT_NAME}
      annotations:
        description: "Defines how to deploy grafana pims-monitoring"
      labels:
        name: pims-grafana-tools
        app: pims-grafana-tools
        component: grafana
        env: tools
        role: grafana
    spec:
      replicas: 1
      selector:
        name: pims-grafana-tools
        app: pims-grafana-tools
        component: grafana
        env: tools
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Recreate
      template:
        metadata:
          name: pims-grafana-tools
          labels:
            name: pims-grafana-tools
            app: pims-grafana-tools
            component: grafana
            env: tools
            role: grafana
            deploymentConfig: grafana
        spec:
          serviceAccountName: ${GRAFANA_SERVICE_ACCOUNT_NAME}
          containers:
            - name: oauth-proxy
              image: openshift/oauth-proxy:v1.0.0
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 8443
                  name: public
              args:
                - --https-address=:8443
                - --provider=openshift
                - --openshift-service-account=${GRAFANA_SERVICE_ACCOUNT_NAME}
                - --upstream=http://localhost:3000
                - --tls-cert=/etc/tls/private/tls.crt
                - --tls-key=/etc/tls/private/tls.key
                - --cookie-secret=SECRET
                - --pass-basic-auth=false
              volumeMounts:
                - mountPath: /etc/tls/private
                  name: grafana-tls
            - image: grafana/grafana
              imagePullPolicy: Always
              name: grafana
              env:
                - name: GF_AUTH_BASIC_ENABLED
                  value: "true"
                - name: GF_AUTH_PROXY_ENABLED
                  value: "true"
                - name: GF_AUTH_PROXY_HEADER_NAME
                  value: "X-Forwarded-User"
                - name: GF_AUTH_PROXY_HEADER_PROPERTY
                  value: "username"
                - name: GF_AUTH_PROXY_AUTO_SIGN_UP
                  value: "true"
                - name: GF_AUTH_DISABLE_LOGIN_FORM
                  value: "false"
                - name: GF_USERS_ALLOW_SIGN_UP
                  value: "false"
                - name: GF_USERS_AUTO_ASSIGN_ORG
                  value: "true"
                - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
                  value: "${GF_USERS_AUTO_ASSIGN_ORG_ROLE}"
              ports:
                - containerPort: 3000
                  name: http
                  protocol: TCP
              volumeMounts:
                - mountPath: /etc/grafana/provisioning/datasources
                  name: pims-monitoring-grafana-datasource-config-volume
                - name: grafana-predefined-dashboards-config
                  mountPath: /dashboards
                - mountPath: /etc/grafana/provisioning/dashboards
                  name: grafana-dashboards-config
              resources: {}
              securityContext: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          volumes:
            - name: "pims-monitoring-grafana-datasource-config-volume"
              configMap:
                name: pims-monitoring-tools-grafana-datasource-config
            - name: grafana-tls
              secret:
                secretName: grafana-tls
            - configMap:
                defaultMode: 420
                name: grafana-dashboards-config
              name: grafana-dashboards-config
            - configMap:
                defaultMode: 420
                name: grafana-predefined-dashboards-config
              name: grafana-predefined-dashboards-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 60
      test: false
parameters:
  - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
    displayName: Grafana Default User Role
    description: Grafana Default User Role
    required: true
    value: "Admin"
  - name: GRAFANA_SERVICE_ACCOUNT_NAME
    displayName: Grafana Service Account Name
    description: Grafana Service Account Name
    required: true
    value: "grafana-service-account"
  - name: PROJECT_NAME
    displayName: Project Name
    description: Project Name
    required: true
    value: "jcxjin-tools"
  - name: PROMETHEUS_DATASOURCE_URL
    displayName: Prometheus datasources
    description: Prometheus datasources
    required: true
    value: "https://pims-prometheus.pathfinder.gov.bc.ca"
  - name: DOMAIN
    displayName: Application route domain
    description: Application route domain
    required: true
    value: "pims-grafana.pathfinder.gov.bc.ca"
