# This is a deploy template that will setup and configure
# a Pod to run that hosts a .NET Core 3.1 web application.
# Components in template
#   - Route
#   - Service
#   - DeploymentConfig
#   - ConfigMap
#   - Secret
kind: Template
apiVersion: v1
metadata:
  name: pims-api-deploy
  annotations:
    openshift.io/display-name: .NET Core 3.1 Deployment Template
    description: Deployment template for a .NET Core 3.1 application.
    tags: pims-api,netcore,api
labels:
  app: pims
  component: api
  role: backend
objects:
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-${COMP_NAME}
    namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
  labels:
    name: ${APP_NAME}-${COMP_NAME}
    app: ${APP_NAME}
    component: ${COMP_NAME}
    role: infrastructure
  spec:
    host: ${APP_DOMAIN}
    path: ${DOMAIN_PATH}
    to:
      kind: Service
      name: ${APP_NAME}-${COMP_NAME}
      weight: 100
    port:
      targetPort: ${APP_PORT}-tcp
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-${COMP_NAME}
    namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
    annotations:
      description: Exposes and load balances the application pods.
  labels:
    name: ${APP_NAME}-${COMP_NAME}
    app: ${APP_NAME}
    component: ${COMP_NAME}
    role: infrastructure
  spec:
    ports:
      - name: ${APP_PORT}-tcp
        protocol: TCP
        port: ${{APP_PORT}}
        targetPort: ${{APP_PORT}}
    selector:
      app: ${APP_NAME}
      component: ${COMP_NAME}
    type: ClusterIP
    sessionAffinity: None
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-${COMP_NAME}
    namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
    annotations:
      description: "Defines how to deploy ${APP_NAME}-${COMP_NAME}"
  labels:
    name: ${APP_NAME}-${COMP_NAME}
    app: ${APP_NAME}
    component: ${COMP_NAME}
    role: infrastructure
  spec:
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${APP_NAME}-${COMP_NAME}
          from:
            kind: ImageStreamTag
            namespace: "${SOURCEIMAGE_NAMESPACE}"
            name: "${APP_NAME}-${COMP_NAME}:${SOURCEIMAGE_TAG}"
    replicas: 1
    selector:
      app: ${APP_NAME}
      component: ${COMP_NAME}
    template:
      metadata:
        name: ${APP_NAME}-${COMP_NAME}
        labels:
          app: ${APP_NAME}
          component: ${COMP_NAME}
      spec:
        containers:
          - name: ${APP_NAME}-${COMP_NAME}
            image: ""
            ports:
              - containerPort: ${{APP_PORT}}
                protocol: TCP
            env:
              - name: ASPNETCORE_ENVIRONMENT
                value: "${ASPNETCORE_ENVIRONMENT}"
            resources:
              limits:
                cpu: "${CPU_LIMIT}"
                memory: "${MEMORY_LIMIT}"
              requests:
                cpu: "${CPU_REQUEST}"
                memory: "${MEMORY_REQUEST}"
            # readinessProbe:
            #   httpGet:
            #     path: /hc
            #     port: 8080
            #     scheme: HTTP
            #   initialDelaySeconds: 10
            #   timeoutSeconds: 1
            #   periodSeconds: 10
            #   successThreshold: 1
            #   failureThreshold: 3
            # livenessProbe:
            #   httpGet:
            #     path: /hc
            #     port: 8080
            #     scheme: HTTP
            #   initialDelaySeconds: 10
            #   timeoutSeconds: 1
            #   periodSeconds: 10
            #   successThreshold: 1
            #   failureThreshold: 3
- kind: ConfigMap
  apiVersion: v1
  data:
    ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
    KeyCloak__Authority: ${KEYCLOAK_AUTHORITY}
    KeyCloak__Audience: ${KEYCLOAK_AUDIENCE}
  metadata:
    name: ${APP_NAME}-${COMP_NAME}
    namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
  labels:
    name: ${APP_NAME}-${COMP_NAME}
    app: ${APP_NAME}
    component: ${COMP_NAME}
- kind: Secret
  apiVersion: v1
  data:
    ConnectionStrings__GeoSpatial: ${CONNECTIONSTRINGS_GEOSPATIAL}
    Keycloak__Secret: ${KEYCLOAK_SECRET}
  metadata:
    name: ${APP_NAME}-${COMP_NAME}
    namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
  labels:
    name: ${APP_NAME}-${COMP_NAME}
    app: ${APP_NAME}
    component: ${COMP_NAME}
  type: Opaque
parameters:
- name: APP_NAME
  displayName: App Name
  description: The name of the application (grouped).
  required: true
  value: "pims"
- name: COMP_NAME
  displayName: Component Name
  description: The name of the application component.
  required: true
  value: "api"
- name: PROJECT_NAMESPACE
  displayName: Image Namespace
  description:
    The namespace of the OpenShift project containing the application.
  required: true
  value: "jcxjin"
- name: ENV_NAME
  displayName: Environment name
  description: The name for this environment [dev, test, prod]
  required: true
  value: "dev"
- name: SOURCEIMAGE_NAMESPACE
  displayName: Image Namespace
  description:
    The namespace of the OpenShift project containing the imagestream for the
    application.
  required: true
  value: "jcxjin-tools"
- name: SOURCEIMAGE_TAG
  displayName: Source branch TAG name
  description: The TAG name for this branch [dev, test, prod]
  required: true
  value: "dev"
- name: ASPNETCORE_ENVIRONMENT
  displayName: AspNetCore Environment
  description:
    The ASP Net Core deployment environment setting, e.g., Development,
    Staging, Production
  required: true
  value: "Production"
- name: APP_DOMAIN
  displayName: Application Hostname
  description:
    The exposed hostname that will route to the the .NET Core service, if left blank a
    value will be defaulted.
  value: "pims-dev.pathfinder.gov.bc.ca"
- name: DOMAIN_PATH
  displayName: Application URL path
  description: The URL path to the application
  value: "/api"
- name: APP_PORT
  displayName: Application Port
  description: The port used to communicate with the Pod
  value: "8080"
- name: CONNECTIONSTRINGS_GEOSPATIAL
  displayName: Connection String - Geo-spatial DB
  description:
    The connection string to the Geo-spatial database.
  required: true
  value:
- name: KEYCLOAK_AUTHORITY
  displayName: KeyCloak realm URL
  description:
    The KeyCloak realm URL for the client.
  required: true
  value: "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/xz0xtue5"
- name: KEYCLOAK_AUDIENCE
  displayName: KeyCloak client name
  description:
    The KeyCloak client name for the client.
  required: true
  value: "pims-api"
- name: KEYCLOAK_SECRET
  displayName: KeyCloak Secret
  description:
    The KeyCloak secret key for the client.
  value:
- name: CPU_LIMIT
  displayName: CPU Limit
  description: Maximum amount of CPU the container can use.
  value: "1"
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 4Gi
- name: CPU_REQUEST
  displayName: CPU Request
  description: Starting amount of CPU the container can use.
  value: 100m
- name: MEMORY_REQUEST
  displayName: Memory Request
  description: Starting amount of memory the container can use.
  value: 2Gi
