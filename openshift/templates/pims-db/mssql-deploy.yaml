kind: Template
apiVersion: v1
metadata:
  name: pims-db-deploy
  annotations:
    openshift.io/display-name: Microsoft SQL Server
    description: Relational database management system developed by Microsoft.
    tags: pims-db
objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-secret
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: "Database passwords"
      labels:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-secret
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: database
    type: Opaque
    stringData:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: Exposes the database server
      labels:
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: database
    spec:
      ports:
        - name: 1433-tcp
          protocol: TCP
          port: 1433
          targetPort: 1433
      selector:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      type: ClusterIP
      sessionAffinity: None
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: Defines how to deploy the database server
      labels:
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: database
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
            from:
              kind: ImageStreamTag
              namespace: "${PROJECT_NAMESPACE}-tools"
              name: ${APP_NAME}-${COMP_NAME}:${IMAGE_TAG}
      replicas: 1
      selector:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      template:
        metadata:
          name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
          labels:
            name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
            app: ${APP_NAME}
            component: ${COMP_NAME}
            env: ${ENV_NAME}
            role: database
        spec:
          volumes:
            - name: mssql-data
              persistentVolumeClaim:
                claimName: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-data
            - name: backup
              persistentVolumeClaim:
                claimName: "${BACKUP_VOLUME_NAME}"
          containers:
            - name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
              image: ""
              ports:
                - containerPort: 1433
                  protocol: TCP
              env:
                - name: ACCEPT_EULA
                  value: "Y"
                - name: MSSQL_PID
                  value: ${MSSQL_PID}
                - name: TZ
                  value: ${TIMEZONE}
                - name: MSSQL_SA_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-secret
                      key: MSSQL_SA_PASSWORD
                - name: DB_NAME
                  value: ${DB_NAME}
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-secret
                      key: DB_USER
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-secret
                      key: DB_PASSWORD
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - mountPath: /var/opt/mssql
                  name: mssql-data
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-data
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: database
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
parameters:
  - name: APP_NAME
    displayName: App Name
    description: The name of the application (grouped).
    required: true
    value: pims
  - name: COMP_NAME
    displayName: Component Name
    description: The name of the application component [app, api, db]
    required: true
    value: db
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod]
    required: true
    value: dev
  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the application.
    required: true
    value: jcxjin
  - name: ID
    displayName: Unique Identifier
    description: A unique identifier to allow for multiple instances (i.e. "-01").
    value: ""

  - name: IMAGE_TAG
    displayName: Output Image Tag
    description: The tag given to the built image.
    required: true
    value: latest

  - name: MSSQL_PID
    displayName: The Microsoft SQL Server Edition
    description: The edition of the database to run [Developer|Express|Standard|Enterprise|EnterpriseCore]
    required: true
    value: Developer
  - name: MSSQL_SA_PASSWORD
    displayName: Microsoft SQL Server Password
    description: Microsoft SQL Server sa password
    from: '[\w]{5}_[\w]{15}!'
    generate: expression
  - name: TIMEZONE
    displayName: Timezone
    description: The Timezone to run the database in (i.e. America/Los_Angeles)
    required: true
    value: America/Los_Angeles
  - name: DB_NAME
    displayName: Database Name
    description: The name of the PIMS database that will be created
    required: true
    value: pims
  - name: DB_USER
    displayName: Database Username
    description: The username to access the database from PIMS that will be created
    required: true
    value: admin
  - name: DB_PASSWORD
    displayName: Microsoft SQL Server Password
    description: Microsoft SQL Server sa password
    from: '[\w]{12}'
    generate: expression

  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: "2"
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use
    required: true
    value: 4Gi
  - name: VOLUME_CAPACITY
    displayName: Persistent Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi
    value: 5Gi
    required: true
  - name: "BACKUP_VOLUME_NAME"
    displayName: "Backup Volume Name"
    description: The name of the persistent volume used to store the backups.  Please note, when using the recommended nfs-backup storage class the name of the pvc MUST be taken from the manually provisioned claim; nfs-backup storage MUST be provisioned manually.
    required: true
    value: bk-jcxjin-dev-r9c53stkggh6
