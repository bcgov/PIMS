# This is a deploy template that will setup and configure
# a Pod to run an NGINX web server that hosts a React web application.
# Components in template
#   - ConfigMap
#   - Route
#   - Service
#   - DeploymentConfig
apiVersion: v1
kind: Template
metadata:
  name: pims-app-deploy
  annotations:
    openshift.io/display-name: Nginx with Node build
    description: Deployment template for a React frontend application served through Nginx
    tags: pims-app,react,nginx
objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-sso-client
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: Keycloak client JSON configuration
      labels:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-sso-client
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: frontend
    type: Opaque
    data:
      keycloak.json: '{
        "realm": "${KEYCLOAK_REALM}",
        "auth-server-url": "${KEYCLOAK_AUTHORITY_URL}",
        "ssl-required": "external",
        "resource": "${APP_NAME}-${COMP_NAME}",
        "public-client": true,
        "confidential-port": 0
        }'
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: "Defines how to deploy ${APP_NAME}-${COMP_NAME}"
      labels:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: frontend
    spec:
      replicas: 1
      selector:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
          labels:
            name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
            app: ${APP_NAME}
            component: ${COMP_NAME}
            env: ${ENV_NAME}
            role: frontend
        spec:
          volumes:
            - name: "${APP_NAME}-${COMP_NAME}${ID}-keycloak-config-volume"
              configMap:
                name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}-sso-client
                items:
                  - key: "${KEYCLOAK_CONFIG_FILE_NAME}"
                    path: "${KEYCLOAK_CONFIG_FILE_NAME}"
          containers:
            - name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
              image: ""
              imagePullPolicy: Always
              ports:
                - containerPort: ${{APP_PORT}}
                  protocol: TCP
              env:
                - name: API_URL
                  value: ${API_URL}
                - name: API_SERVICE_NAME
                  value: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
                - name: API_PATH
                  value: ${API_PATH}
                - name: RealIpFrom
                  value: ${REAL_IP_FROM}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: "${APP_NAME}-${COMP_NAME}${ID}-keycloak-config-volume"
                  mountPath: "${KEYCLOAK_CONFIG_MOUNT_PATH}${KEYCLOAK_CONFIG_FILE_NAME}"
                  subPath: "${KEYCLOAK_CONFIG_FILE_NAME}"
              livenessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: ${{APP_PORT}}
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: "/nginx_status"
                  port: ${{APP_PORT}}
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
            from:
              kind: ImageStreamTag
              namespace: "${PROJECT_NAMESPACE}-tools"
              name: "${APP_NAME}-${COMP_NAME}:${IMAGE_TAG}"
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      annotations:
        description: Exposes and load balances the application pods.
      labels:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: frontend
    spec:
      ports:
        - name: ${APP_PORT}-tcp
          port: ${{APP_PORT}}
          protocol: TCP
          targetPort: ${{APP_PORT}}
      selector:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
      sessionAffinity: None
      type: ClusterIP
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
      namespace: ${PROJECT_NAMESPACE}-${ENV_NAME}
      labels:
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        app: ${APP_NAME}
        component: ${COMP_NAME}
        env: ${ENV_NAME}
        role: frontend
    spec:
      host: ${APP_DOMAIN}
      port:
        targetPort: ${APP_PORT}-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-${COMP_NAME}-${ENV_NAME}${ID}
        weight: 100
parameters:
  - name: APP_NAME
    displayName: App Name
    description: The name of the application (grouped).
    required: true
    value: pims
  - name: COMP_NAME
    displayName: Component Name
    description: The name of the application component (e.g ui, backend, database).
    required: true
    value: app
  - name: ENV_NAME
    displayName: Environment name
    description: The name for this environment [dev, test, prod]
    required: true
    value: dev
  - name: ID
    displayName: Unique Identifier
    description: A unique identifier to allow for multiple instances (i.e. "-01").
    value: ""
  - name: PROJECT_NAMESPACE
    displayName: OpenShift Project Namespace
    description: The namespace of the OpenShift project containing the application.
    required: true
    value: jcxjin
  - name: IMAGE_TAG
    displayName: Image Tag Name
    description: The image tag that will be used for this deployment.
      This provides a way to setup an environment for other branches.
    value: dev

  - name: APP_DOMAIN
    displayName: Application Hostname
    description:
      The exposed hostname that will route to the the React frontend, if left blank a
      value will be defaulted.
    value: pims-dev.pathfinder.gov.bc.ca
  - name: APP_PORT
    displayName: Application Port
    description: The port used to communicate with the Pod
    value: "8080"

  - name: KEYCLOAK_REALM
    displayName: Keycloak SSO realm
    description: Keycloak SSO realm, used by the frontend login.
    required: true
    value: xz0xtue5
  - name: KEYCLOAK_CONFIG_FILE_NAME
    displayName: keycloak.json Config File Name
    description: The name of the configuration file to be used for keycloak.json.
    required: true
    value: keycloak.json
  - name: KEYCLOAK_CONFIG_MOUNT_PATH
    displayName: keycloak.json Mount Path
    description: The path to use to mount the config file.
    required: true
    value: "/tmp/app/dist/"
  - name: KEYCLOAK_AUTHORITY_URL
    displayName: Keycloak Authority URL
    description: The Keycloak authority URL.
    required: true
    value: "https://dev.oidc.gov.bc.ca/auth"

  - name: REAL_IP_FROM
    description:
      OpenShift cluster private IP range in CIDR notation, used by Nginx
      ngx_http_realip_module.
    displayName: OpenShift Cluster IP Range
    required: true
    value: 172.51.0.0/16

  - name: API_URL
    description:
      The default URL to use when proxying requests to the application's
      API.  The value here will be overridden if a API_SERVICE_NAME is defined.
    displayName: API URL
    required: false
    value: ""
  - name: API_PATH
    description: The root path for the API.  Used in conjunction with API_SERVICE_NAME.
    displayName: API Path
    required: true
    value: "/api"

  - name: CPU_LIMIT
    displayName: CPU Limit
    description: Maximum amount of CPU the container can use.
    value: "1"
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use.
    value: 4Gi
  - name: CPU_REQUEST
    displayName: CPU Request
    description: Starting amount of CPU the container can use.
    value: 100m
  - name: MEMORY_REQUEST
    displayName: Memory Request
    description: Starting amount of memory the container can use.
    value: 2Gi
