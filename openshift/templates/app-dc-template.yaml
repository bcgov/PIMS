apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: pims-api-template
labels:
  template: pims-api-template
objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      annotations:
        app.openshift.io/connects-to: pims-api
      name: pims-app
      namespace: ${LICENSE_PLATE}-${ENVIRONMENT}
      labels:
        app: pims
        app.kubernetes.io/part-of: pims
        env: ${ENVIRONMENT}
        name: pims-app
        role: app
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - pims-app
            from:
              kind: ImageStreamTag
              namespace: ${LICENSE_PLATE}-tools
              name: 'pims-app:${IMAGE_TAG}'
      replicas: 2
      revisionHistoryLimit: 10
      test: false
      selector:
        app: pims
        env: ${ENVIRONMENT}
        name: pims-app
        role: app
      template:
        metadata:
          name: pims-app
          creationTimestamp: null
          labels:
            app: pims
            env: ${ENVIRONMENT}
            name: pims-app
            role: app
        spec:
          volumes:
            - name: pims-app-keycloak
              configMap:
                name: pims-app-sso
                items:
                  - key: keycloak.json
                    path: keycloak.json
                defaultMode: 420
            - name: pims-app-envvars
              configMap:
                name: pims-app-env
                items:
                  - key: environment.json
                    path: environment.json
                defaultMode: 420
            - name: file-storage
              persistentVolumeClaim:
                claimName: file-storage
          containers:
            - resources:
                limits:
                  cpu: 150m
                  memory: 1Gi
                requests:
                  cpu: 50m
                  memory: 100Mi
              readinessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              name: pims-app
              livenessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              env:
                - name: API_URL
                - name: API_SERVICE_NAME
                  value: pims-api
                - name: API_PATH
                  value: /api
                - name: RealIpFrom
                  value: 172.51.0.0/16
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: Always
              volumeMounts:
                - name: pims-app-keycloak
                  mountPath: /tmp/app/dist/keycloak.json
                  subPath: keycloak.json
                - name: pims-app-envvars
                  mountPath: /tmp/app/dist/environment.json
                  subPath: environment.json
                - name: pims-file-storage
                  mountPath: /tmp/app/dist/videos
              terminationMessagePolicy: File
              image: >-
                image-registry.openshift-image-registry.svc:5000/${LICENSE_PLATE}-tools/pims-app@sha256:9b67dfe4e3590d61f426138c18f9a85092562881effbc1c9945a0441856ddde5
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler




parameters:
  - description: Environment
    displayName: Environment
    name: ENVIRONMENT
    required: true
    value: dev
  - description: License Plate
    displayName: License Plate
    name: LICENSE_PLATE
    required: true
    value: "354028"
  - description: ImageTag
    displayName: ImageTag
    name: IMAGE_TAG
    required: true
