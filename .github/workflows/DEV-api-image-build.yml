# GitHub Actions workflow for building and tagging the API image on PR
name: DEV API-:Image Build on PR

on:
  pull_request:
    types: [opened, synchronize, ready_for_review] # Triggered by opened or changed pull requests.
    branches: [main]
    paths:
      - 'backend/**' # Triggers on changes to files in the frontend/ directory.

jobs:
  PIMS-API-Build-Tag-Push:
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      migration: ${{ steps.migration.outputs.migration_needed }}
    steps:
      # check out the repo
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # login to the Openshift Cluster
      - name: Login to Openshift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}
          namespace: ${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}

      # Login to BC Gov Docker Image Repository
      - name: Login to Openshift Docker
        run: |
          docker login ${{ secrets.PUBLIC_IMAGE_REPOSITORY }} -u ${{ secrets.OPENSHIFT_SA_NAME }} -p ${{ secrets.OPENSHIFT_SA_TOOLS_TOKEN }}

      # Build the API Image 
      - name: Build API Image
        run: |
          docker-compose -f docker-compose.prod.yml build backend

      # Tag the API Image with the PR number
      - name: Tag API Image
        run: |
          docker tag pims_backend ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-api:${{github.event.pull_request.number}}

      # Check for migration files
      - name: Check for migration files
        id: migration
        run: |
          if git diff --name-only HEAD~1 | grep -q "backend/dal/Migrations"; then
            echo "migration_needed=true" >> $GITHUB_OUTPUT
          else
            echo "migration_needed=false" >> $GITHUB_OUTPUT
          fi
      
      # if migration files have changed, build the migration image
      - name: Build Migration Image
        if: steps.migration.outputs.migration_needed == 'true'
        run: |
          docker-compose -f docker-compose.prod.yml build migration

      - name: Tag Migration Image
        if: steps.migration.outputs.migration_needed == 'true'
        run: |
          docker tag pims_migration ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-migrations:${{github.event.pull_request.number}}

      # push the migration image
      - name: Push Migration Image
        if: steps.migration.outputs.migration_needed == 'true'
        run: |
          docker push ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-migrations:${{github.event.pull_request.number}}

      # Push the API Image
      - name: Push API Image
        run: |
          docker push ${{ secrets.PUBLIC_IMAGE_REPOSITORY }}/${{ secrets.OPENSHIFT_TOOLS_NAMESPACE }}/pims-api:${{github.event.pull_request.number}}

  Update_Wiki_Tags:
    needs: [PIMS-API-Build-Tag-Push]
    name: Update table in wiki
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Clone the wiki repository
      - name: Clone wiki repository
        run: |
          echo "Cloning wiki repo https://github.com/$GITHUB_REPOSITORY.wiki.git"
          git clone "https://$GITHUB_ACTOR:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.wiki.git" ./wiki

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      # Run the update wiki Python script
      - name: Run update wiki Python script
        run: python ./.github/helpers/update-wiki-table.py ./wiki/Image-tags.md API "Latest Build Image Tag" "${{github.event.pull_request.number}}"

      - name: Update wiki for Migration
        if: needs.PIMS-API-Build-Tag-Push.outputs.migration == 'true'
        run: python ./.github/helpers/update-wiki-table.py ./wiki/Image-tags.md MIGRATION "Latest Build Image Tag" "${{github.event.pull_request.number}}"

      # Commit and push changes to the wiki
      - name: Commit and push changes to wiki
        run: |
          cd ./wiki
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          if git diff-index --quiet HEAD; then
            echo "Nothing changed"
            exit 0
          fi
          echo "Pushing changes to wiki"
          git commit -m "Value populated at image build API" && git push "https://$GITHUB_ACTOR:$GH_TOKEN@github.com/$GITHUB_REPOSITORY.wiki.git"

      # Add comment to the PR
      - name: Add Comment To the PR
        if: github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸš€ **Deployment Information**\n\nThe API Image has been built with the tag: **`${{github.event.pull_request.number}}`**. Please make sure to utilize this specific tag when promoting these changes to the TEST and PROD environments during the API deployment. For more updates please monitor [Image Tags](https://github.com/bcgov/PIMS/wiki/Image-tags) Page on Wiki."
            })

